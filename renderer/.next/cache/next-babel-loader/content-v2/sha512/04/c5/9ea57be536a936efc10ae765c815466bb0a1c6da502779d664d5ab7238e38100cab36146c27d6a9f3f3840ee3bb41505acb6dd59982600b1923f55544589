{"ast":null,"code":"/**\n * Convert timestamp to specific format.\n * @param time the value for converting\n * @returns {string} the formatted duration\n */\nfunction convertDuration(time) {\n  var hour = Math.floor(time / 3600 % 24);\n  var min = Math.floor(time / 60 % 60);\n  var sec = Math.floor(time % 60);\n\n  if (hour >= 1 && min === 0 && sec === 0) {\n    return \"\".concat(hour, \":00:00\");\n  } else if (hour >= 1 && min !== 0 && sec === 0) {\n    return \"\".concat(hour, \":\").concat(min, \":00\");\n  } else if (hour >= 1 && min !== 0 && sec !== 0) {\n    return \"\".concat(hour, \":\").concat(min, \":\").concat(sec);\n  } else if (min >= 1 && sec === 0) {\n    return \"\".concat(min, \":00\");\n  } else if (min >= 1 && sec !== 0) {\n    return \"\".concat(min, \":\").concat(sec);\n  } else if (hour === 0 && min === 0 && sec !== 0) {\n    return \"00:\".concat(sec);\n  }\n\n  return '00:00';\n}\n/**\n * Convert views to specific format.\n * @param views the value for converting\n * @returns {string|*} the formatted view\n */\n\n\nfunction convertViews(views) {\n  if (views < 10000) return views;\n  return (views / 10000).toFixed(1) + '万';\n}\n\nexport { convertViews, convertDuration };","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/utils/utils.js"],"names":["convertDuration","time","hour","Math","floor","min","sec","convertViews","views","toFixed"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAT,CAAyBC,IAAzB,EAA8B;AAC1B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,IAAP,GAAc,EAAzB,CAAb;AACA,MAAMI,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAP,GAAY,EAAvB,CAAZ;AACA,MAAMK,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAZ;;AAEA,MAAGC,IAAI,IAAI,CAAR,IAAaG,GAAG,KAAK,CAArB,IAA0BC,GAAG,KAAK,CAArC,EAAuC;AACnC,qBAAUJ,IAAV;AACH,GAFD,MAEM,IAAGA,IAAI,IAAI,CAAR,IAAaG,GAAG,KAAK,CAArB,IAA0BC,GAAG,KAAK,CAArC,EAAuC;AACzC,qBAAUJ,IAAV,cAAkBG,GAAlB;AACH,GAFK,MAEA,IAAGH,IAAI,IAAI,CAAR,IAAaG,GAAG,KAAK,CAArB,IAA0BC,GAAG,KAAK,CAArC,EAAuC;AACzC,qBAAUJ,IAAV,cAAkBG,GAAlB,cAAyBC,GAAzB;AACH,GAFK,MAEA,IAAGD,GAAG,IAAI,CAAP,IAAYC,GAAG,KAAK,CAAvB,EAAyB;AAC3B,qBAAUD,GAAV;AACH,GAFK,MAEA,IAAGA,GAAG,IAAI,CAAP,IAAYC,GAAG,KAAK,CAAvB,EAAyB;AAC3B,qBAAUD,GAAV,cAAiBC,GAAjB;AACH,GAFK,MAEA,IAAGJ,IAAI,KAAK,CAAT,IAAcG,GAAG,KAAK,CAAtB,IAA2BC,GAAG,KAAK,CAAtC,EAAwC;AAC1C,wBAAaA,GAAb;AACH;;AAED,SAAO,OAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAExB,MAAGA,KAAK,GAAG,KAAX,EAAkB,OAAOA,KAAP;AAClB,SAAO,CAACA,KAAK,GAAG,KAAT,EAAgBC,OAAhB,CAAwB,CAAxB,IAA2B,GAAlC;AACH;;AAID,SACIF,YADJ,EAEIP,eAFJ","sourcesContent":["/**\n * Convert timestamp to specific format.\n * @param time the value for converting\n * @returns {string} the formatted duration\n */\nfunction convertDuration(time){\n    const hour = Math.floor(time / 3600 % 24);\n    const min = Math.floor(time / 60 % 60);\n    const sec = Math.floor(time % 60);\n\n    if(hour >= 1 && min === 0 && sec === 0){\n        return `${hour}:00:00`;\n    }else if(hour >= 1 && min !== 0 && sec === 0){\n        return `${hour}:${min}:00`;\n    }else if(hour >= 1 && min !== 0 && sec !== 0){\n        return `${hour}:${min}:${sec}`;\n    }else if(min >= 1 && sec === 0){\n        return `${min}:00`;\n    }else if(min >= 1 && sec !== 0){\n        return `${min}:${sec}`\n    }else if(hour === 0 && min === 0 && sec !== 0){\n        return `00:${sec}`\n    }\n\n    return '00:00'\n}\n\n/**\n * Convert views to specific format.\n * @param views the value for converting\n * @returns {string|*} the formatted view\n */\nfunction convertViews(views){\n\n    if(views < 10000) return views;\n    return (views / 10000).toFixed(1)+'万';\n}\n\n\n\nexport {\n    convertViews,\n    convertDuration\n}"]},"metadata":{},"sourceType":"module"}