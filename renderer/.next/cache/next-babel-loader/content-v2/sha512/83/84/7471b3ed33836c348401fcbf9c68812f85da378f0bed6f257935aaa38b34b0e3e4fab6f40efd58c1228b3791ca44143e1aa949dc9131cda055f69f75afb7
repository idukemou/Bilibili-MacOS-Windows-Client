{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/popover/style/css\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/slider/style/css\";\nimport _Slider from \"antd/lib/slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx\";\nimport { useEffect, useRef, useState } from \"react\";\nimport store from \"../../redux/store\";\nimport { platVideoStatusAction, playVideoInfoAction } from \"../../redux/actionCreators\";\nimport { convertDuration } from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props) {\n  const progressRef = useRef(null);\n  const playerRef = useRef(null);\n  const {\n    0: player,\n    1: setPlayer\n  } = useState(null);\n  const {\n    0: mediaContainer,\n    1: setMediaContainer\n  } = useState(null);\n  const {\n    0: url,\n    1: setUrl\n  } = useState(store.getState().videoInfo.url);\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: isPlay,\n    1: setIsPlay\n  } = useState(false);\n  const {\n    0: isMuted,\n    1: setIsMuted\n  } = useState(false);\n  const {\n    0: isFullScreen,\n    1: setIsFullScreen\n  } = useState(false);\n  const {\n    0: processTime,\n    1: setProcessTime\n  } = useState(0);\n  const {\n    0: duration,\n    1: setDuration\n  } = useState(0);\n  const {\n    0: bufferedTime,\n    1: setBufferedTime\n  } = useState(0);\n  const {\n    0: processor,\n    1: setProcessor\n  } = useState(null);\n  const {\n    0: volume,\n    1: setVolume\n  } = useState(100);\n  const {\n    0: speedRate,\n    1: setSpeedRate\n  } = useState(1);\n  useEffect(() => {\n    let unsubscribe = store.subscribe(() => {\n      if (JSON.stringify(store.getState().videoInfo.url) !== '{}') {\n        setUrl(store.getState().videoInfo.url.durl[0].url);\n        unsubscribe();\n      }\n    });\n\n    if (flvjs.isSupported() && url.length > 10) {\n      setPlayer(flvjs.createPlayer({\n        type: 'flv',\n        isLive: false,\n        hasVideo: true,\n        hasAudio: true,\n        url: url\n      }, {\n        lazyLoad: false\n      }));\n      setMediaContainer(document.getElementById('media-player'));\n      setReady(true);\n    }\n  }, [url]);\n  useEffect(() => {\n    if (player !== null) {\n      initPlayer();\n    }\n  }, [ready]);\n\n  function initPlayer() {\n    if (player !== null && mediaContainer !== null) {\n      player.attachMediaElement(mediaContainer);\n      player.load();\n\n      mediaContainer.onloadeddata = () => {\n        play();\n        setDuration(getDuration());\n        setVolume(getPlayerVolume());\n      };\n\n      mediaContainer.onplay = () => {\n        clearInterval(processor);\n        setIsPlay(true);\n        setProcessor(setInterval(() => {\n          setProcessTime(getCurrentTime());\n        }, speedRate * 1000));\n      };\n\n      mediaContainer.onended = () => {\n        clearInterval(processor);\n      };\n\n      mediaContainer.onprogress = () => {\n        if (mediaContainer.buffered.length > 0) {\n          setBufferedTime(mediaContainer.buffered.end(0));\n        }\n      };\n    }\n  }\n\n  function play() {\n    if (player !== null) {\n      player.play().then(() => {}).catch(e => {});\n    }\n  }\n\n  function pause() {\n    clearInterval(processor);\n\n    if (player !== null) {\n      player.pause();\n      setIsPlay(false);\n    }\n  }\n\n  function destroy() {\n    if (player !== null) {\n      clearInterval(processor);\n      pause();\n      player.unload();\n      player.detachMediaElement();\n      player.destroy();\n      setPlayer(null);\n    }\n  }\n\n  function getCurrentTime() {\n    if (player === null) return 0;\n\n    if (convertDuration(player.currentTime) === convertDuration(player.duration)) {\n      return player.duration;\n    } else {\n      return player.currentTime;\n    }\n  }\n\n  function setCurrentTime(time) {\n    if (player !== null) {\n      player.currentTime = time;\n    }\n  }\n\n  function appendSeek(time) {\n    player.currentTime = player.currentTime + time;\n  }\n\n  function pushSeek() {\n    appendSeek(0.125);\n  }\n\n  function getDuration() {\n    if (player !== null) {\n      return player.duration;\n    }\n\n    return 0;\n  }\n\n  function setPlayerVolume(volume) {\n    if (player !== null) {\n      player.volume = volume / 100;\n    }\n  }\n\n  function getPlayerVolume() {\n    if (player !== null) {\n      return player.volume;\n    }\n  }\n\n  function muteSwitcher() {\n    if (isMuted && player !== null) {\n      player.muted = false;\n      setIsMuted(false);\n    } else {\n      player.muted = true;\n      setIsMuted(true);\n    }\n  }\n\n  function playSwitcher() {\n    isPlay ? pause() : play();\n  }\n\n  function replay() {\n    if (player !== null) {\n      pause();\n      setCurrentTime(0);\n      play();\n    }\n  }\n\n  function setPlayerSpeedRate(rate) {\n    if (mediaContainer !== null) {\n      mediaContainer.playbackRate = rate;\n      setSpeedRate(rate);\n    }\n  }\n\n  function handleChangeVolume(value) {\n    setPlayerVolume(value);\n\n    if (value > 0) {\n      setIsMuted(false);\n    } else {\n      setIsMuted(true);\n    }\n  }\n\n  function handleProgressChange({\n    target: {\n      value\n    }\n  }) {\n    pause();\n    setProcessTime(value);\n  }\n\n  function mouseDownEvent() {\n    setProcessTime(progressRef.current.value);\n  }\n\n  function mouseUpEvent() {\n    if (processTime >= bufferedTime) {\n      setTimeout(() => {\n        pushSeek();\n      }, 1000);\n    }\n\n    if (mediaContainer.buffered.length > 0) {\n      if (processTime <= mediaContainer.buffered.start(0)) {\n        setTimeout(() => {\n          pushSeek();\n        }, 1000);\n      }\n    }\n\n    setCurrentTime(processTime);\n    play();\n    console.log(\"Finished, \", convertDuration(processTime));\n  }\n\n  function fullscreen() {\n    if (!isFullScreen) {\n      playerRef.current.requestFullscreen();\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n    }\n\n    playerRef.current.addEventListener('fullscreenchange', () => {\n      const state = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\n      !state && setIsFullScreen(false);\n    });\n  }\n\n  function close() {\n    destroy();\n    props.quit();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-player-container\",\n      ref: playerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"media-player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: convertDuration(processTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: progressRef,\n            type: \"range\",\n            min: 0,\n            max: duration,\n            value: processTime,\n            onInput: e => handleProgressChange(e),\n            onMouseUp: () => mouseUpEvent(),\n            onMouseDown: () => mouseDownEvent(),\n            className: \"progress-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: convertDuration(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${convertDuration(bufferedTime)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-control-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"media-button media-control-play\",\n            onClick: () => playSwitcher(),\n            children: isPlay ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-zanting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-bofang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 84\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"media-button media-control-speed\",\n            onClick: () => setPlayerSpeedRate(2),\n            children: \"2X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"media-button media-control-speed\",\n            onClick: () => setPlayerSpeedRate(1),\n            children: \"\\u539F\\u901F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Popover, {\n            content: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: 120\n              },\n              children: /*#__PURE__*/_jsxDEV(_Slider, {\n                vertical: true,\n                defaultValue: 100,\n                onChange: e => handleChangeVolume(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this),\n            placement: \"top\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"media-button media-control-mute\",\n              onClick: () => muteSwitcher(),\n              children: isMuted ? /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"iconfont icon-jingyin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 47\n              }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"iconfont icon-yinliang\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"media-button media-control-replay\",\n            onClick: () => replay(),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-replay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"media-button media-control-close\",\n            onClick: () => close(),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"media-button media-control-fullscreen\",\n            onClick: () => fullscreen(),\n            children: isFullScreen ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-fullscreen-exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-fangda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 96\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nexport default function VideoDetail(props) {\n  const {\n    0: status,\n    1: setStatus\n  } = useState(store.getState().playVideoStatus);\n  useEffect(() => {\n    store.subscribe(() => {\n      setStatus(store.getState().playVideoStatus);\n    });\n  }, [store.getState().playVideoStatus]);\n\n  function exitVideo() {\n    store.dispatch(platVideoStatusAction(false));\n    store.dispatch(playVideoInfoAction({\n      url: {},\n      info: {}\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: '100',\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: '#fff',\n      display: status ? 'block' : 'none',\n      overflow: \"scroll\"\n    },\n    children: status && /*#__PURE__*/_jsxDEV(MediaPlayer, {\n      quit: exitVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx"],"names":["useEffect","useRef","useState","store","platVideoStatusAction","playVideoInfoAction","convertDuration","MediaPlayer","props","progressRef","playerRef","player","setPlayer","mediaContainer","setMediaContainer","url","setUrl","getState","videoInfo","ready","setReady","isPlay","setIsPlay","isMuted","setIsMuted","isFullScreen","setIsFullScreen","processTime","setProcessTime","duration","setDuration","bufferedTime","setBufferedTime","processor","setProcessor","volume","setVolume","speedRate","setSpeedRate","unsubscribe","subscribe","JSON","stringify","durl","flvjs","isSupported","length","createPlayer","type","isLive","hasVideo","hasAudio","lazyLoad","document","getElementById","initPlayer","attachMediaElement","load","onloadeddata","play","getDuration","getPlayerVolume","onplay","clearInterval","setInterval","getCurrentTime","onended","onprogress","buffered","end","then","catch","e","pause","destroy","unload","detachMediaElement","currentTime","setCurrentTime","time","appendSeek","pushSeek","setPlayerVolume","muteSwitcher","muted","playSwitcher","replay","setPlayerSpeedRate","rate","playbackRate","handleChangeVolume","value","handleProgressChange","target","mouseDownEvent","current","mouseUpEvent","setTimeout","start","console","log","fullscreen","requestFullscreen","exitFullscreen","addEventListener","state","fullScreen","mozFullScreen","webkitIsFullScreen","close","quit","height","VideoDetail","status","setStatus","playVideoStatus","exitVideo","dispatch","info","position","top","left","right","bottom","zIndex","width","backgroundColor","display","overflow"],"mappings":"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","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport store from \"../../redux/store\";\nimport {platVideoStatusAction, playVideoInfoAction} from \"../../redux/actionCreators\";\nimport {convertDuration} from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\nimport {Popover, Slider} from \"antd\";\n\nfunction MediaPlayer(props){\n    const progressRef = useRef(null);\n    const playerRef = useRef(null);\n\n    const [player, setPlayer] = useState(null);\n    const [mediaContainer, setMediaContainer] = useState(null);\n    const [url, setUrl] = useState(store.getState().videoInfo.url);\n    const [ready, setReady] = useState(false);\n\n    const [isPlay, setIsPlay] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n\n    const [processTime, setProcessTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [bufferedTime, setBufferedTime] = useState(0);\n    const [processor, setProcessor] = useState(null);\n    const [volume, setVolume] = useState(100);\n    const [speedRate, setSpeedRate] = useState(1);\n\n\n\n    useEffect(() => {\n        let unsubscribe = store.subscribe(() => {\n            if(JSON.stringify(store.getState().videoInfo.url) !== '{}'){\n                setUrl(store.getState().videoInfo.url.durl[0].url);\n                unsubscribe();\n            }\n        })\n\n        if(flvjs.isSupported() && url.length > 10){\n            setPlayer(flvjs.createPlayer({\n                type: 'flv',\n                isLive: false,\n                hasVideo: true,\n                hasAudio: true,\n                url: url\n            }, {\n                lazyLoad: false,\n            }));\n            setMediaContainer(document.getElementById('media-player'));\n            setReady(true);\n        }\n    }, [url]);\n\n    useEffect(() => {\n        if(player !== null){\n            initPlayer();\n        }\n    }, [ready]);\n\n    function initPlayer(){\n        if(player !== null && mediaContainer !== null){\n            player.attachMediaElement(mediaContainer);\n            player.load();\n\n            mediaContainer.onloadeddata = () => {\n                play();\n                setDuration(getDuration());\n                setVolume(getPlayerVolume());\n            }\n\n            mediaContainer.onplay = () => {\n                clearInterval(processor);\n                setIsPlay(true);\n                setProcessor(setInterval(() => {\n                    setProcessTime(getCurrentTime());\n                }, speedRate * 1000))\n            }\n\n            mediaContainer.onended = () => {\n                clearInterval(processor);\n            }\n\n            mediaContainer.onprogress = () => {\n                if(mediaContainer.buffered.length > 0){\n                    setBufferedTime(mediaContainer.buffered.end(0));\n                }\n            }\n        }\n    }\n\n    function play(){\n        if(player !== null){\n            player.play()\n                .then(() => {})\n                .catch((e) => {});\n        }\n    }\n\n    function pause(){\n        clearInterval(processor);\n        if (player !== null){\n            player.pause();\n            setIsPlay(false);\n        }\n    }\n\n    function destroy(){\n        if(player !== null){\n            clearInterval(processor);\n            pause();\n            player.unload();\n            player.detachMediaElement();\n            player.destroy();\n            setPlayer(null);\n        }\n    }\n\n    function getCurrentTime(){\n        if (player === null) return 0;\n\n        if(convertDuration(player.currentTime) === convertDuration(player.duration)){\n            return player.duration;\n        }else{\n            return player.currentTime;\n        }\n    }\n\n    function setCurrentTime(time){\n        if(player !== null){\n            player.currentTime = time;\n        }\n    }\n\n    function appendSeek(time){\n        player.currentTime = player.currentTime + time;\n    }\n\n    function pushSeek(){\n        appendSeek(0.125);\n    }\n\n    function getDuration(){\n        if(player !== null){\n            return player.duration;\n        }\n        return 0;\n    }\n\n    function setPlayerVolume(volume){\n        if(player !== null){\n            player.volume = volume / 100;\n        }\n    }\n\n    function getPlayerVolume(){\n        if(player !== null){\n            return player.volume;\n        }\n    }\n\n    function muteSwitcher(){\n        if(isMuted && player !== null){\n            player.muted = false;\n            setIsMuted(false);\n        }else{\n            player.muted = true;\n            setIsMuted(true);\n        }\n    }\n\n    function playSwitcher(){\n        isPlay ? pause(): play();\n    }\n\n    function replay(){\n        if(player !== null){\n            pause();\n            setCurrentTime(0);\n            play();\n        }\n    }\n\n    function setPlayerSpeedRate(rate){\n        if(mediaContainer !== null){\n            mediaContainer.playbackRate = rate;\n            setSpeedRate(rate);\n        }\n    }\n\n    function handleChangeVolume(value){\n        setPlayerVolume(value);\n\n        if(value > 0){\n            setIsMuted(false);\n        }else{\n            setIsMuted(true);\n        }\n    }\n\n    function handleProgressChange({target: {value}}){\n        pause();\n        setProcessTime(value);\n    }\n\n    function mouseDownEvent(){\n        setProcessTime(progressRef.current.value);\n    }\n\n    function mouseUpEvent(){\n        if(processTime >= bufferedTime){\n            setTimeout(() => {\n                pushSeek();\n            }, 1000);\n        }\n\n        if(mediaContainer.buffered.length > 0){\n            if(processTime <= mediaContainer.buffered.start(0)){\n                setTimeout(() => {\n                    pushSeek();\n                }, 1000);\n            }\n        }\n\n        setCurrentTime(processTime);\n        play();\n\n        console.log(\"Finished, \", convertDuration(processTime));\n    }\n\n    function fullscreen(){\n        if(!isFullScreen){\n            playerRef.current.requestFullscreen();\n            setIsFullScreen(true);\n        }else{\n            document.exitFullscreen();\n        }\n\n        playerRef.current.addEventListener('fullscreenchange', () => {\n            const state = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\n            !state && setIsFullScreen(false);\n\n        })\n    }\n\n    function close(){\n        destroy();\n        props.quit();\n    }\n\n\n    return(\n        <>\n            <div className=\"media-player-container\" ref={playerRef}>\n                <video id='media-player'/>\n                <div className=\"media-controls\">\n                    <div className=\"progress-bar-wrapper\">\n                        <span>{convertDuration(processTime)}</span>\n                        <input\n                            ref={progressRef}\n                            type=\"range\"\n                            min={0}\n                            max={duration}\n                            value={processTime}\n                            onInput={(e) => handleProgressChange(e)}\n                            onMouseUp={() => mouseUpEvent()}\n                            onMouseDown={() => mouseDownEvent()}\n                            className=\"progress-bar\"\n                        />\n                        <span>{convertDuration(duration)}</span>\n                        <span>{`${convertDuration(bufferedTime)}`}</span>\n                    </div>\n\n                    <div className=\"media-control-buttons\">\n                        <button className=\"media-button media-control-play\" onClick={() => playSwitcher()}>\n                            {\n                                isPlay ? <i className=\"iconfont icon-zanting\" /> : <i className=\"iconfont icon-bofang\" />\n                            }\n                        </button>\n                        <button className=\"media-button media-control-speed\" onClick={() => setPlayerSpeedRate(2)}>2X</button>\n                        <button className=\"media-button media-control-speed\" onClick={() => setPlayerSpeedRate(1)}>原速</button>\n\n                        <Popover\n                            content={\n                                <div style={{height: 120}}>\n                                    <Slider vertical defaultValue={100} onChange={(e) => handleChangeVolume(e)} />\n                                </div>\n                            }\n                            placement=\"top\"\n                        >\n                            <button className=\"media-button media-control-mute\" onClick={() => muteSwitcher()}>\n                                {\n                                    isMuted ? <i className=\"iconfont icon-jingyin\"/> : <i className=\"iconfont icon-yinliang\" />\n                                }\n                            </button>\n                        </Popover>\n\n                        <button className=\"media-button media-control-replay\" onClick={() => replay()}>\n                            <i className=\"iconfont icon-replay\" />\n                        </button>\n                        <button className=\"media-button media-control-close\" onClick={() => close()}>\n                            {\n                                <i className=\"iconfont icon-close\" />\n                            }\n                        </button>\n                        <button className=\"media-button media-control-fullscreen\" onClick={() => fullscreen()}>\n                            {\n                                isFullScreen? <i className=\"iconfont icon-fullscreen-exit\"/> : <i className=\"iconfont icon-fangda\"/>\n                            }\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function VideoDetail(props){\n\n    const [status, setStatus] = useState(store.getState().playVideoStatus);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            setStatus(store.getState().playVideoStatus);\n        })\n    }, [store.getState().playVideoStatus]);\n\n\n    function exitVideo(){\n        store.dispatch(platVideoStatusAction(false));\n        store.dispatch(playVideoInfoAction({\n            url: {},\n            info: {}\n        }));\n    }\n\n    return(\n        <section style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: '100',\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: '#fff',\n            display: (status ? 'block': 'none'),\n            overflow: \"scroll\"\n        }}>\n            {\n                status && <MediaPlayer quit={exitVideo} />\n            }\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}