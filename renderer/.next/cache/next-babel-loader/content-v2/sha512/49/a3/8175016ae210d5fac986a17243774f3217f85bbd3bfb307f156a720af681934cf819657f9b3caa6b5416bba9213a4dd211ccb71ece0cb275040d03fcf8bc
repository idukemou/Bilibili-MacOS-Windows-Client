{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport store from \"../../redux/store\";\nimport { platVideoStatusAction, playVideoInfoAction } from \"../../redux/actionCreators\";\nimport { convertDuration } from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props) {\n  _s();\n\n  var progressRef = useRef(null);\n  var playerRef = useRef(null);\n\n  var _useState = useState(null),\n      player = _useState[0],\n      setPlayer = _useState[1];\n\n  var _useState2 = useState(null),\n      mediaContainer = _useState2[0],\n      setMediaContainer = _useState2[1];\n\n  var _useState3 = useState(store.getState().videoInfo.url),\n      url = _useState3[0],\n      setUrl = _useState3[1];\n\n  var _useState4 = useState(false),\n      ready = _useState4[0],\n      setReady = _useState4[1];\n\n  var _useState5 = useState(false),\n      isPlay = _useState5[0],\n      setIsPlay = _useState5[1];\n\n  var _useState6 = useState(false),\n      isMuted = _useState6[0],\n      setIsMuted = _useState6[1];\n\n  var _useState7 = useState(false),\n      isFullScreen = _useState7[0],\n      setIsFullScreen = _useState7[1];\n\n  var _useState8 = useState(0),\n      processTime = _useState8[0],\n      setProcessTime = _useState8[1];\n\n  var _useState9 = useState(0),\n      duration = _useState9[0],\n      setDuration = _useState9[1];\n\n  var _useState10 = useState(0),\n      bufferedTime = _useState10[0],\n      setBufferedTime = _useState10[1];\n\n  var _useState11 = useState(null),\n      processor = _useState11[0],\n      setProcessor = _useState11[1];\n\n  useEffect(function () {\n    var unsubscribe = store.subscribe(function () {\n      if (JSON.stringify(store.getState().videoInfo.url) !== '{}') {\n        setUrl(store.getState().videoInfo.url.durl[0].url);\n        unsubscribe();\n      }\n    });\n\n    if (flvjs.isSupported() && url.length > 10) {\n      setPlayer(flvjs.createPlayer({\n        type: 'flv',\n        isLive: false,\n        hasVideo: true,\n        hasAudio: true,\n        url: url\n      }, {\n        lazyLoad: false\n      }));\n      setMediaContainer(document.getElementById('media-player'));\n      setReady(true);\n    }\n  }, [url]);\n  useEffect(function () {\n    if (player !== null) {\n      initPlayer();\n    }\n  }, [ready]);\n\n  function initPlayer() {\n    if (player !== null && mediaContainer !== null) {\n      player.attachMediaElement(mediaContainer);\n      player.load();\n\n      mediaContainer.onloadeddata = function () {\n        play();\n        setDuration(getDuration());\n      };\n\n      mediaContainer.onplay = function () {\n        clearInterval(processor);\n        setIsPlay(true);\n        setProcessor(setInterval(function () {\n          console.log('=====>');\n          setProcessTime(getCurrentTime());\n        }, 1000));\n      };\n\n      mediaContainer.onended = function () {\n        clearInterval(processor);\n      };\n\n      mediaContainer.onprogress = function () {\n        if (mediaContainer.buffered.length > 0) {\n          setBufferedTime(mediaContainer.buffered.end(0));\n        }\n      };\n    }\n  }\n\n  function play() {\n    if (player !== null) {\n      player.play().then(function () {})[\"catch\"](function (e) {});\n    }\n  }\n\n  function pause() {\n    clearInterval(processor);\n\n    if (player !== null) {\n      player.pause();\n      setIsPlay(false);\n    }\n  }\n\n  function destroy() {\n    if (player !== null) {\n      clearInterval(processor);\n      pause();\n      player.unload();\n      player.detachMediaElement();\n      player.destroy();\n      setPlayer(null);\n    }\n  }\n\n  function getCurrentTime() {\n    if (player === null) return 0;\n\n    if (convertDuration(player.currentTime) === convertDuration(player.duration)) {\n      return player.duration;\n    } else {\n      return player.currentTime;\n    }\n  }\n\n  function setCurrentTime(time) {\n    if (player !== null) {\n      player.currentTime = time;\n    }\n  }\n\n  function appendSeek(time) {\n    player.currentTime = player.currentTime + time;\n  }\n\n  function pushSeek() {\n    appendSeek(0.125);\n  }\n\n  function getDuration() {\n    if (player !== null) {\n      return player.duration;\n    }\n\n    return 0;\n  }\n\n  function muteSwitcher() {\n    if (isMuted && player !== null) {\n      player.muted = false;\n      setIsMuted(false);\n    } else {\n      player.muted = true;\n      setIsMuted(true);\n    }\n  }\n\n  function playSwitcher() {\n    isPlay ? pause() : play();\n  }\n\n  function replay() {\n    if (player !== null) {\n      pause();\n      setCurrentTime(0);\n      play();\n    }\n  }\n\n  function setSpeedRate(rate) {\n    if (mediaContainer !== null) {\n      mediaContainer.playbackRate = rate;\n    }\n  }\n\n  function handleProgressChange(_ref) {\n    var value = _ref.target.value;\n    pause();\n    setProcessTime(value);\n    console.log(convertDuration(value));\n  }\n\n  function mouseDownEvent() {\n    setProcessTime(progressRef.current.value);\n  }\n\n  function mouseUpEvent() {\n    if (processTime >= bufferedTime) {\n      setTimeout(function () {\n        pushSeek();\n      }, 1000);\n    }\n\n    if (mediaContainer.buffered.length > 0) {\n      if (processTime <= mediaContainer.buffered.start(0)) {\n        setTimeout(function () {\n          pushSeek();\n        }, 1000);\n      }\n    }\n\n    setCurrentTime(processTime);\n    play();\n    console.log(\"Finished, \", convertDuration(processTime));\n  }\n\n  function fullscreen() {\n    if (playerRef.current.requestFullscreen) {\n      playerRef.current.requestFullscreen();\n      setIsFullScreen(true);\n    }\n  }\n\n  function close() {\n    destroy();\n    props.quit();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-player-container\",\n      ref: playerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"media-player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-play\",\n          onClick: function onClick() {\n            return playSwitcher();\n          },\n          children: isPlay ? \"暂停\" : \"播放\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-speed\",\n          onClick: function onClick() {\n            return setSpeedRate(2);\n          },\n          children: \"2X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-speed\",\n          onClick: function onClick() {\n            return setSpeedRate(1);\n          },\n          children: \"\\u539F\\u901F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-mute\",\n          onClick: function onClick() {\n            return muteSwitcher();\n          },\n          children: \"\\u9759\\u97F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-replay\",\n          onClick: function onClick() {\n            return replay();\n          },\n          children: \"\\u91CD\\u64AD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-close\",\n          onClick: function onClick() {\n            return close();\n          },\n          children: \"\\u5173\\u95ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), !isFullScreen && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"media-control-fullscreen\",\n          onClick: function onClick() {\n            return fullscreen();\n          },\n          children: \"\\u5168\\u5C4F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: progressRef,\n            type: \"range\",\n            min: 0,\n            max: duration,\n            value: processTime,\n            onInput: function onInput(e) {\n              return handleProgressChange(e);\n            },\n            onMouseUp: function onMouseUp() {\n              return mouseUpEvent();\n            },\n            onMouseDown: function onMouseDown() {\n              return mouseDownEvent();\n            },\n            className: \"progress-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\".concat(convertDuration(processTime), \"/\").concat(convertDuration(duration), \"  ---   \").concat(convertDuration(bufferedTime))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\n_s(MediaPlayer, \"qlehsfxdSq0BzjTno/oOYbBUofI=\");\n\n_c = MediaPlayer;\nexport default function VideoDetail(props) {\n  _s2();\n\n  var _useState12 = useState(store.getState().playVideoStatus),\n      status = _useState12[0],\n      setStatus = _useState12[1];\n\n  useEffect(function () {\n    store.subscribe(function () {\n      setStatus(store.getState().playVideoStatus);\n    });\n  }, [store.getState().playVideoStatus]);\n\n  function exitVideo() {\n    store.dispatch(platVideoStatusAction(false));\n    store.dispatch(playVideoInfoAction({\n      url: {},\n      info: {}\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: '100',\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: '#fff',\n      display: status ? 'block' : 'none',\n      overflow: \"scroll\"\n    },\n    children: status && /*#__PURE__*/_jsxDEV(MediaPlayer, {\n      quit: exitVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(VideoDetail, \"1IV1QrlNWNfANAKMe6lxWYK5QPg=\");\n\n_c2 = VideoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MediaPlayer\");\n$RefreshReg$(_c2, \"VideoDetail\");","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx"],"names":["useEffect","useRef","useState","store","platVideoStatusAction","playVideoInfoAction","convertDuration","MediaPlayer","props","progressRef","playerRef","player","setPlayer","mediaContainer","setMediaContainer","getState","videoInfo","url","setUrl","ready","setReady","isPlay","setIsPlay","isMuted","setIsMuted","isFullScreen","setIsFullScreen","processTime","setProcessTime","duration","setDuration","bufferedTime","setBufferedTime","processor","setProcessor","unsubscribe","subscribe","JSON","stringify","durl","flvjs","isSupported","length","createPlayer","type","isLive","hasVideo","hasAudio","lazyLoad","document","getElementById","initPlayer","attachMediaElement","load","onloadeddata","play","getDuration","onplay","clearInterval","setInterval","console","log","getCurrentTime","onended","onprogress","buffered","end","then","e","pause","destroy","unload","detachMediaElement","currentTime","setCurrentTime","time","appendSeek","pushSeek","muteSwitcher","muted","playSwitcher","replay","setSpeedRate","rate","playbackRate","handleProgressChange","value","target","mouseDownEvent","current","mouseUpEvent","setTimeout","start","fullscreen","requestFullscreen","close","quit","VideoDetail","playVideoStatus","status","setStatus","exitVideo","dispatch","info","position","top","left","right","bottom","zIndex","width","height","backgroundColor","display","overflow"],"mappings":"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","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport store from \"../../redux/store\";\nimport {platVideoStatusAction, playVideoInfoAction} from \"../../redux/actionCreators\";\nimport {convertDuration} from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props){\n    const progressRef = useRef(null);\n    const playerRef = useRef(null);\n\n    const [player, setPlayer] = useState(null);\n    const [mediaContainer, setMediaContainer] = useState(null);\n    const [url, setUrl] = useState(store.getState().videoInfo.url);\n    const [ready, setReady] = useState(false);\n\n    const [isPlay, setIsPlay] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [isFullScreen, setIsFullScreen] = useState(false);\n\n    const [processTime, setProcessTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [bufferedTime, setBufferedTime] = useState(0);\n    const [processor, setProcessor] = useState(null);\n\n\n\n\n    useEffect(() => {\n        let unsubscribe = store.subscribe(() => {\n            if(JSON.stringify(store.getState().videoInfo.url) !== '{}'){\n                setUrl(store.getState().videoInfo.url.durl[0].url);\n                unsubscribe();\n            }\n        })\n\n        if(flvjs.isSupported() && url.length > 10){\n            setPlayer(flvjs.createPlayer({\n                type: 'flv',\n                isLive: false,\n                hasVideo: true,\n                hasAudio: true,\n                url: url\n            }, {\n                lazyLoad: false,\n            }));\n            setMediaContainer(document.getElementById('media-player'));\n            setReady(true);\n        }\n    }, [url]);\n\n    useEffect(() => {\n        if(player !== null){\n            initPlayer();\n        }\n    }, [ready]);\n\n    function initPlayer(){\n        if(player !== null && mediaContainer !== null){\n            player.attachMediaElement(mediaContainer);\n            player.load();\n\n            mediaContainer.onloadeddata = () => {\n                play();\n                setDuration(getDuration());\n            }\n\n            mediaContainer.onplay = () => {\n                clearInterval(processor);\n                setIsPlay(true);\n                setProcessor(setInterval(() => {\n                    console.log('=====>');\n                    setProcessTime(getCurrentTime());\n                }, 1000))\n            }\n\n            mediaContainer.onended = () => {\n                clearInterval(processor);\n            }\n\n            mediaContainer.onprogress = () => {\n                if(mediaContainer.buffered.length > 0){\n                    setBufferedTime(mediaContainer.buffered.end(0));\n                }\n            }\n        }\n    }\n\n    function play(){\n        if(player !== null){\n            player.play()\n                .then(() => {})\n                .catch((e) => {});\n        }\n    }\n\n    function pause(){\n        clearInterval(processor);\n        if (player !== null){\n            player.pause();\n            setIsPlay(false);\n        }\n    }\n\n    function destroy(){\n        if(player !== null){\n            clearInterval(processor);\n            pause();\n            player.unload();\n            player.detachMediaElement();\n            player.destroy();\n            setPlayer(null);\n        }\n    }\n\n    function getCurrentTime(){\n        if (player === null) return 0;\n\n        if(convertDuration(player.currentTime) === convertDuration(player.duration)){\n            return player.duration;\n        }else{\n            return player.currentTime;\n        }\n    }\n\n    function setCurrentTime(time){\n        if(player !== null){\n            player.currentTime = time;\n        }\n    }\n\n    function appendSeek(time){\n        player.currentTime = player.currentTime + time;\n    }\n\n    function pushSeek(){\n        appendSeek(0.125);\n    }\n\n    function getDuration(){\n        if(player !== null){\n            return player.duration;\n        }\n        return 0;\n    }\n\n    function muteSwitcher(){\n        if(isMuted && player !== null){\n            player.muted = false;\n            setIsMuted(false);\n        }else{\n            player.muted = true;\n            setIsMuted(true);\n        }\n    }\n\n    function playSwitcher(){\n        isPlay ? pause(): play();\n    }\n\n    function replay(){\n        if(player !== null){\n            pause();\n            setCurrentTime(0);\n            play();\n        }\n    }\n\n    function setSpeedRate(rate){\n        if(mediaContainer !== null){\n            mediaContainer.playbackRate = rate;\n        }\n    }\n\n    function handleProgressChange({target: {value}}){\n        pause();\n        setProcessTime(value);\n        console.log(convertDuration(value));\n    }\n\n    function mouseDownEvent(){\n        setProcessTime(progressRef.current.value);\n    }\n\n    function mouseUpEvent(){\n        if(processTime >= bufferedTime){\n            setTimeout(() => {\n                pushSeek();\n            }, 1000);\n        }\n\n        if(mediaContainer.buffered.length > 0){\n            if(processTime <= mediaContainer.buffered.start(0)){\n                setTimeout(() => {\n                    pushSeek();\n                }, 1000);\n            }\n        }\n\n        setCurrentTime(processTime);\n        play();\n\n        console.log(\"Finished, \", convertDuration(processTime));\n    }\n\n    function fullscreen(){\n        if(playerRef.current.requestFullscreen){\n            playerRef.current.requestFullscreen();\n            setIsFullScreen(true);\n        }\n    }\n\n    function close(){\n        destroy();\n        props.quit();\n    }\n\n\n    return(\n        <>\n            <div className=\"media-player-container\" ref={playerRef}>\n                <video id='media-player'/>\n                <div className=\"media-controls\">\n                    <button className=\"media-control-play\" onClick={() => playSwitcher()}>\n                        {isPlay ? \"暂停\" : \"播放\"}\n                    </button>\n                    <button className=\"media-control-speed\" onClick={() => setSpeedRate(2)}>2X</button>\n                    <button className=\"media-control-speed\" onClick={() => setSpeedRate(1)}>原速</button>\n                    <button className=\"media-control-mute\" onClick={() => muteSwitcher()}>静音</button>\n                    <button className=\"media-control-replay\" onClick={() => replay()}>重播</button>\n                    <button className=\"media-control-close\" onClick={() => close()}>关闭</button>\n                    {\n                        !isFullScreen && <button className=\"media-control-fullscreen\" onClick={() => fullscreen()}>全屏</button>\n                    }\n\n                    <div className=\"progress-bar-wrapper\">\n                        <input\n                            ref={progressRef}\n                            type=\"range\"\n                            min={0}\n                            max={duration}\n                            value={processTime}\n                            onInput={(e) => handleProgressChange(e)}\n                            onMouseUp={() => mouseUpEvent()}\n                            onMouseDown={() => mouseDownEvent()}\n                            className=\"progress-bar\"\n                        />\n                    </div>\n\n                    <span>{`${convertDuration(processTime)}/${convertDuration(duration)}  ---   ${convertDuration(bufferedTime)}`}</span>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function VideoDetail(props){\n\n    const [status, setStatus] = useState(store.getState().playVideoStatus);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            setStatus(store.getState().playVideoStatus);\n        })\n    }, [store.getState().playVideoStatus]);\n\n\n    function exitVideo(){\n        store.dispatch(platVideoStatusAction(false));\n        store.dispatch(playVideoInfoAction({\n            url: {},\n            info: {}\n        }));\n    }\n\n    return(\n        <section style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: '100',\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: '#fff',\n            display: (status ? 'block': 'none'),\n            overflow: \"scroll\"\n        }}>\n            {\n                status && <MediaPlayer quit={exitVideo} />\n            }\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}