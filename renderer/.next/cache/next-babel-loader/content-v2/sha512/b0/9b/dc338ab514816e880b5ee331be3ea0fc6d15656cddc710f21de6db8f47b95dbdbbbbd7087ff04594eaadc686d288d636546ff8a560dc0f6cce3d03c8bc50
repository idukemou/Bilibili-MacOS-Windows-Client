{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/homePage/rcmd.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport store from \"../../redux/store\";\nimport electron from 'electron';\nimport Link from 'next/link';\nimport { getRecommendListAction } from \"../../redux/actionCreators\";\nconst ipcRenderer = electron.ipcRenderer || false;\n\nif (ipcRenderer) {\n  ipcRenderer.send('request_recommend_list');\n  ipcRenderer.on('fetch_recommend_list', async (event, data) => {\n    store.dispatch(await getRecommendListAction(data));\n  });\n}\n\nfunction convertDuration(time) {\n  return time;\n}\n\nfunction convertViews(views) {\n  return views;\n}\n\nfunction RecommendUI(props) {\n  const data = props.data;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rcmd-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rcmd-item-info-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.pic,\n          alt: data.title,\n          className: \"rcmd-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rcmd-item-stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rcmd-item-duration\",\n            children: convertDuration(data.duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rcmd-item-views\",\n            children: [convertViews(data.view), \"\\u89C2\\u770B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rcmd-item-danmaku\",\n            children: \"\\u5F39\\u5E55\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rcmd-item-title-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\nexport default class Recommend extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadMore\", () => {\n      const _this = this;\n\n      if (ipcRenderer) {\n        ipcRenderer.invoke('request_recommend_list_append').then(data => {\n          _this.setState({\n            recommendList: _this.state.recommendList.concat(data.item)\n          });\n        });\n      }\n    });\n\n    this.state = {\n      recommendList: []\n    };\n  }\n\n  componentDidMount() {\n    const _this = this;\n\n    this.unsubscribe = store.subscribe(() => {\n      this.setState({\n        recommendList: store.getState().recommendList\n      }, () => {\n        setTimeout(() => {\n          _this.unsubscribe();\n        }, 2000);\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if (nextProps.loading) {\n      this.loadMore();\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.recommendList.map((list, index) => /*#__PURE__*/_jsxDEV(RecommendUI, {\n        data: list\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this))\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/homePage/rcmd.jsx"],"names":["React","store","electron","Link","getRecommendListAction","ipcRenderer","send","on","event","data","dispatch","convertDuration","time","convertViews","views","RecommendUI","props","pic","title","duration","view","Recommend","Component","constructor","_this","invoke","then","setState","recommendList","state","concat","item","componentDidMount","unsubscribe","subscribe","getState","setTimeout","shouldComponentUpdate","nextProps","nextState","nextContext","loading","loadMore","render","map","list","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport store from \"../../redux/store\";\nimport electron from 'electron';\nimport Link from 'next/link'\nimport {getRecommendListAction} from \"../../redux/actionCreators\";\n\nconst ipcRenderer = electron.ipcRenderer || false;\n\nif(ipcRenderer){\n    ipcRenderer.send('request_recommend_list');\n    ipcRenderer.on('fetch_recommend_list', async (event, data) => {\n        store.dispatch(await getRecommendListAction(data))\n    });\n}\n\nfunction convertDuration(time){\n    return time;\n}\n\nfunction convertViews(views){\n    return views;\n}\n\nfunction RecommendUI(props){\n    const data = props.data;\n\n    return(\n        <Link>\n            <div className='rcmd-item'>\n                <div className='rcmd-item-info-wrapper'>\n                    <img src={data.pic} alt={data.title} className='rcmd-item-image'/>\n                    <div className='rcmd-item-stat'>\n                        <span className='rcmd-item-duration'>{convertDuration(data.duration)}</span>\n                        <span className='rcmd-item-views'>{convertViews(data.view)}观看</span>\n                        <span className='rcmd-item-danmaku'>弹幕</span>\n                    </div>\n                </div>\n                <div className='rcmd-item-title-wrapper'>\n                    <div>\n\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default class Recommend extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            recommendList: []\n        }\n    }\n\n    componentDidMount() {\n        const _this = this;\n        this.unsubscribe = store.subscribe(() => {\n            this.setState({\n                recommendList: store.getState().recommendList\n            }, () => {\n                setTimeout(()=>{\n                    _this.unsubscribe();\n                }, 2000)\n            })\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if(nextProps.loading){\n            this.loadMore();\n        }\n\n        return true;\n    }\n\n    loadMore = () => {\n        const _this = this;\n        if(ipcRenderer){\n            ipcRenderer.invoke('request_recommend_list_append')\n                .then(data => {\n                    _this.setState({\n                        recommendList: _this.state.recommendList.concat(data.item)\n                    })\n                });\n        }\n    }\n\n    render(){\n        return(\n            <>\n                {\n                    this.state.recommendList.map((list, index) => (\n                        <RecommendUI key={index} data={list} />\n                    ))\n                }\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}