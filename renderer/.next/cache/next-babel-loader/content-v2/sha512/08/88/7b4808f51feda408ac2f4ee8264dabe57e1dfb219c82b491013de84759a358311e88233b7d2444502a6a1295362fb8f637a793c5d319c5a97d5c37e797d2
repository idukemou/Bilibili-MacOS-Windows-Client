{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/layout/preload.jsx\";\nimport { useState, useEffect } from \"react\";\nimport '../../styles/preload.css';\n\nfunction getRandomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport default function Preload() {\n  const {\n    0: showPage,\n    1: setShowPage\n  } = useState(true);\n  const {\n    0: timer,\n    1: setTimer\n  } = useState(6);\n  useEffect(() => {\n    if (timer === 0 && showPage) jumpOver();\n    timer > 0 && showPage && setTimeout(() => {\n      setTimer(timer - 1);\n    }, 1000);\n  }, [timer]);\n\n  function jumpOver() {\n    setShowPage(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showPage ? /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"preload\",\n      className: showPage ? 'preload-page-show' : 'preload-page-destroy',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"preload-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"preload-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"preload-btn\",\n        onClick: () => jumpOver(),\n        children: [\"\\u8DF3\\u8FC7 \", timer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this) : ''\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/layout/preload.jsx"],"names":["useState","useEffect","getRandomInteger","min","max","Math","floor","random","Preload","showPage","setShowPage","timer","setTimer","jumpOver","setTimeout"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,0BAAP;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoC;AAChC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA2CA,GAAlD;AACH;;AAED,eAAe,SAASK,OAAT,GAAkB;AAE7B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,KAAK,KAAK,CAAV,IAAeF,QAAlB,EAA4BI,QAAQ;AACpCF,IAAAA,KAAK,GAAG,CAAR,IAAaF,QAAb,IAAyBK,UAAU,CAAC,MAAM;AAACF,MAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAAmB,KAA3B,EAA6B,IAA7B,CAAnC;AACH,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAKA,WAASE,QAAT,GAAmB;AACfH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,sBACI;AAAA,cAEQD,QAAQ,gBACJ;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEA,QAAQ,GAAG,mBAAH,GAAuB,sBAAhE;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAE,MAAMI,QAAQ,EAAhD;AAAA,oCAAwDF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,GAML;AARX,mBADJ;AAaH","sourcesContent":["import {useState, useEffect} from \"react\";\nimport '../../styles/preload.css';\n\nfunction getRandomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nexport default function Preload(){\n\n    const [showPage, setShowPage] = useState(true);\n    const [timer, setTimer] = useState(6);\n\n    useEffect(() => {\n        if(timer === 0 && showPage) jumpOver();\n        timer > 0 && showPage && setTimeout(() => {setTimer(timer-1);}, 1000);\n    }, [timer]);\n\n    function jumpOver(){\n        setShowPage(false);\n    }\n\n    return(\n        <>\n            {\n                showPage ? (\n                    <section id='preload' className={showPage ? 'preload-page-show':'preload-page-destroy'}>\n                        <div id='preload-image' />\n                        <div id='preload-logo' />\n                        <button id='preload-btn' onClick={() => jumpOver()}>跳过 {timer}</button>\n                    </section>\n                ): ''\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}