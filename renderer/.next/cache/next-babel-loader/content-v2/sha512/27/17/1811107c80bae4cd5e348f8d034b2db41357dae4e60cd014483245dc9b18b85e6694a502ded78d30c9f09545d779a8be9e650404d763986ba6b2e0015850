{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\n\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/userPage/user.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport LoginPanel from \"../common/LoginPanel\";\nimport store from \"../../redux/store\";\nimport electron from 'electron';\nimport { getUserInfoAction } from \"../../redux/actionCreators\";\nimport '../../styles/user.css';\nvar ipcRenderer = electron.ipcRenderer || false;\nvar menuList = [{\n  icon: '',\n  name: '历史记录'\n}, {\n  icon: '',\n  name: '离线缓存'\n}, {\n  icon: '',\n  name: '我的收藏'\n}, {\n  icon: '',\n  name: '我的关注'\n}, {\n  icon: '',\n  name: '我的消息'\n}, {\n  icon: '',\n  name: '稍后再看'\n}, {\n  icon: '',\n  name: '我的钱包'\n}, {\n  icon: '',\n  name: '设置'\n}];\nexport default function User(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      refreshPage = _useState[0],\n      setRefreshPage = _useState[1];\n\n  var _useState2 = useState(false),\n      display = _useState2[0],\n      setDisplay = _useState2[1];\n\n  var _useState3 = useState(store.getState().userInfo),\n      profile = _useState3[0],\n      setProfile = _useState3[1];\n\n  useEffect(function () {\n    console.log('[user activity]');\n  }, [refreshPage]);\n  useEffect(function () {\n    setProfile(store.getState().userInfo);\n  }, [store.getState().userInfo.isLogin]);\n\n  function handleLogin() {\n    setDisplay(!display);\n  }\n\n  function handleSignup() {\n    handleLogin();\n  }\n\n  function handleUserLogout() {\n    if (ipcRenderer) {\n      // 请求用户登出\n      ipcRenderer.invoke('request_user_logout').then(function (res) {\n        if (res.code === 0) {\n          _message.success(res.message);\n        }\n      }); // 全局初始化用户登录状态信息\n\n      ipcRenderer.invoke('request_is_user_login').then(function (data) {\n        store.dispatch(getUserInfoAction(data));\n        setRefreshPage('logout');\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      display: props.display ? 'block' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"user-navigation-bar-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-login-container\",\n          children: [!profile.isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-login-options\",\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              onClick: function onClick() {\n                return handleLogin();\n              },\n              children: \"\\u767B\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              onClick: function onClick() {\n                return handleSignup();\n              },\n              children: \"\\u6CE8\\u518C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 49\n          }, this), profile.isLogin && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile.face,\n            alt: \"avatar\",\n            width: \"100px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-navigation-container\",\n          children: menuList.map(function (menu, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-navigation-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"user-navigation-icon\",\n                children: menu.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-navigation-name\",\n                children: menu.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"user-content-wrapper\",\n        children: \"hello world\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), display && /*#__PURE__*/_jsxDEV(LoginPanel, {\n      display: handleLogin,\n      setRefreshPage: setRefreshPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(User, \"HDumKQHyJ7mfGbBw1fKowLXZmqA=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/userPage/user.jsx"],"names":["React","useEffect","useState","LoginPanel","store","electron","getUserInfoAction","ipcRenderer","menuList","icon","name","User","props","refreshPage","setRefreshPage","display","setDisplay","getState","userInfo","profile","setProfile","console","log","isLogin","handleLogin","handleSignup","handleUserLogout","invoke","then","res","code","success","message","data","dispatch","face","map","menu","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport LoginPanel from \"../common/LoginPanel\";\nimport {Button, message} from 'antd';\nimport store from \"../../redux/store\";\nimport electron from 'electron';\nimport {getUserInfoAction} from \"../../redux/actionCreators\";\nimport '../../styles/user.css';\n\nconst ipcRenderer = electron.ipcRenderer || false;\n\nconst menuList = [\n    {icon: '', name: '历史记录'},\n    {icon: '', name: '离线缓存'},\n    {icon: '', name: '我的收藏'},\n    {icon: '', name: '我的关注'},\n    {icon: '', name: '我的消息'},\n    {icon: '', name: '稍后再看'},\n    {icon: '', name: '我的钱包'},\n    {icon: '', name: '设置'}\n]\n\nexport default function User (props){\n\n    const [refreshPage, setRefreshPage] = useState('');\n    const [display, setDisplay] = useState(false);\n    const [profile, setProfile] = useState(store.getState().userInfo);\n\n    useEffect(() => {\n        console.log('[user activity]');\n    }, [refreshPage]);\n\n\n    useEffect(() => {\n        setProfile(store.getState().userInfo);\n    }, [store.getState().userInfo.isLogin]);\n\n    function handleLogin(){\n        setDisplay(!display);\n    }\n\n    function handleSignup(){\n        handleLogin();\n    }\n\n    function handleUserLogout(){\n        if(ipcRenderer){\n            // 请求用户登出\n            ipcRenderer.invoke('request_user_logout')\n                .then(res => {\n                    if(res.code === 0){\n                        message.success(res.message);\n                    }\n                })\n\n            // 全局初始化用户登录状态信息\n            ipcRenderer.invoke('request_is_user_login')\n                .then((data) => {\n                    store.dispatch(getUserInfoAction(data));\n                    setRefreshPage('logout');\n                })\n        }\n    }\n\n    return(\n        <section style={{display: (props.display? 'block': 'none')}}>\n            <div id=\"user-page-container\">\n                <div id=\"user-navigation-bar-wrapper\">\n                    <div className=\"user-login-container\">\n                        {\n                            !profile.isLogin && <div className=\"user-login-options\">\n                                <Button type='primary' onClick={() => handleLogin()}>登录</Button>\n                                <Button type='primary' onClick={() => handleSignup()}>注册</Button>\n                            </div>\n                        }\n                        {\n                            profile.isLogin && <img src={profile.face} alt=\"avatar\" width=\"100px\" />\n                        }\n                    </div>\n\n                    <div className=\"user-navigation-container\">\n                        {\n                            menuList.map((menu, index) => (\n                                <div className=\"user-navigation-item\" key={index}>\n                                    <i className=\"user-navigation-icon\">{menu.icon}</i>\n                                    <span className=\"user-navigation-name\">{menu.name}</span>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n\n                <div id=\"user-content-wrapper\">\n                    hello world\n                </div>\n            </div>\n\n            {\n                display && <LoginPanel display={handleLogin} setRefreshPage={setRefreshPage} />\n            }\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}