{"ast":null,"code":"import \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/LoginPanel.jsx\";\nimport { useEffect, useRef, useState } from \"react\";\nimport '../../styles/login.css';\nimport Header from \"../layout/header\";\nimport store from \"../../redux/store\";\nimport electron from \"electron\";\nimport { getCountryListAction } from \"../../redux/actionCreators\";\nconst ipcRenderer = electron.ipcRenderer || false;\nlet captchaToken = {\n  gt: \"\",\n  challenge: \"\",\n  key: \"\",\n  validate: \"\",\n  seccode: \"\"\n};\n\nif (ipcRenderer) {\n  ipcRenderer.send(\"request_country_list\");\n  ipcRenderer.once(\"fetch_country_list\", (event, data) => {\n    store.dispatch(getCountryListAction(data));\n  });\n}\n/**\n * Country list panel.\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nfunction CountryListSelect(props) {\n  const {\n    0: countryList,\n    1: setCountryList\n  } = useState(store.getState().countryList);\n  const {\n    0: display,\n    1: setDisplay\n  } = useState(false);\n  useEffect(() => {\n    setCountryList(store.getState().countryList);\n  }, [store.getState().countryList]);\n  useEffect(() => {\n    props.show && setDisplay(true);\n  }, [props.show]);\n\n  function closePanel() {\n    props.handleShowCountryList();\n    setTimeout(() => {\n      setDisplay(false);\n    }, 600);\n  }\n\n  function selectCountry(data) {\n    props.changeCountry(data);\n    closePanel();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `login-panel-wrapper country-selector-wrapper country-selector-${props.show ? 'show' : 'hide'}`,\n    style: {\n      display: display ? 'block' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      left: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"iconfont icon-back login-close-btn\",\n        onClick: () => closePanel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this),\n      center: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u9009\\u62E9\\u56FD\\u5BB6\\u5730\\u533A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"country-selector-content\",\n      children: countryList.map(countryItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-list-item\",\n        onClick: () => selectCountry({\n          id: countryItem.id,\n          cname: countryItem.cname,\n          country_id: countryItem.country_id\n        }),\n        children: countryItem.cname\n      }, countryItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\nfunction CaptchaPanel(props) {\n  function appendCaptchaPanel(captcha) {\n    captcha.appendTo(document.getElementById(\"captcha-panel-wrapper\"));\n    captcha.onSuccess(() => {\n      const result = captcha.getValidate();\n      console.log([result.geetest_validate, result.geetest_seccode]);\n      captchaToken.validate = result.geetest_validate;\n      captchaToken.seccode = result.geetest_seccode;\n      props.setShowCaptchaPanel(false);\n    });\n  }\n\n  function showCaptchaPanel() {\n    window.initGeetest({\n      gt: captchaToken.gt,\n      challenge: captchaToken.challenge,\n      offline: false,\n      new_captcha: true,\n      product: \"popup\",\n      width: \"340px\",\n      https: true\n    }, appendCaptchaPanel);\n  }\n\n  useEffect(() => {\n    showCaptchaPanel();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"captcha-panel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"captcha-panel-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n/**\n * Login main panel.\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nexport default function LoginPanel(props) {\n  const data = {\n    loginMethod: {\n      smscode: \"smscode\",\n      password: \"password\",\n      unknown: \"unknown\"\n    },\n    title: {\n      smscode: \"手机号登录注册\",\n      password: \"密码登录\",\n      unknown: \"未知登录方式\"\n    }\n  };\n  let telRef = useRef(null);\n  let captchaCodeRef = useRef(null); // method: smscode | password | qrcode\n\n  const {\n    0: loginMethod,\n    1: setLoginMethod\n  } = useState(data.loginMethod.smscode);\n  const {\n    0: show,\n    1: setShow\n  } = useState(true);\n  let title = data.title[loginMethod];\n  const {\n    0: country,\n    1: setCountry\n  } = useState({\n    id: 1,\n    cname: \"中国大陆\",\n    country_id: 86\n  });\n  const {\n    0: showCountryList,\n    1: setShowCountryList\n  } = useState(false);\n  const {\n    0: showCaptchaPanel,\n    1: setShowCaptchaPanel\n  } = useState(false);\n\n  function closePenal() {\n    setShow(false);\n    setTimeout(() => {\n      props.display();\n    }, 600);\n  }\n\n  function changeLoginMethod() {\n    switch (loginMethod) {\n      case 'smscode':\n        setLoginMethod(data.loginMethod.password);\n        break;\n\n      case 'password':\n        setLoginMethod(data.loginMethod.smscode);\n        break;\n\n      default:\n        setLoginMethod(data.loginMethod.unknown);\n    }\n  }\n\n  function handleShowCountryList() {\n    setShowCountryList(!showCountryList);\n  }\n\n  function changeCountry(data) {\n    setCountry(data);\n  }\n\n  function displayCaptchaPanel() {\n    if (showCaptchaPanel === true) return;\n    ipcRenderer.invoke('request_captcha_token').then(data => {\n      captchaToken.gt = data.gt;\n      captchaToken.challenge = data.challenge;\n      captchaToken.key = data.key;\n      return true;\n    }).then(res => {\n      res && setShowCaptchaPanel(true);\n    });\n  }\n\n  function userLogin() {\n    console.log(\"cid: \", country.id);\n    console.log(\"country\", country.cname);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"login-panel-container\",\n    onClick: e => {\n      e.preventDefault();\n\n      if (e.target.id === 'login-panel-container') {\n        closePenal();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"login-panel-container-wrapper\",\n      className: `login-panel-${show ? 'show' : 'hide'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: `login-panel-wrapper`,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          left: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconfont icon-close login-close-btn\",\n            onClick: () => closePenal()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this),\n          center: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this),\n          right: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => changeLoginMethod(),\n            children: loginMethod === 'smscode' ? data.title.password : data.title.smscode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"login-panel-content\",\n          children: [loginMethod === 'smscode' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-panel-content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-panel-input-filed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-panel-input-item country-selector\",\n                onClick: () => handleShowCountryList(),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: country.cname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"iconfont icon-next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-panel-input-item phone-number\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"input-item-title\",\n                  children: [\"+\", country.country_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(_Input, {\n                  ref: telRef,\n                  placeholder: \"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\\u7801\",\n                  maxLength: 16,\n                  allowClear: true,\n                  className: \"phone-number-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"getCaptcha\",\n                  onClick: () => displayCaptchaPanel(),\n                  children: \"\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-panel-input-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"input-item-title\",\n                  children: \"\\u9A8C\\u8BC1\\u7801\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(_Input, {\n                  ref: captchaCodeRef,\n                  placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n                  maxLength: 8,\n                  allowClear: true,\n                  className: \"captcha-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this), showCaptchaPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-panel-input-item captcha-item\",\n                children: showCaptchaPanel && /*#__PURE__*/_jsxDEV(CaptchaPanel, {\n                  setShowCaptchaPanel: setShowCaptchaPanel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"smscode-validate-login-btn\",\n              onClick: () => userLogin(),\n              children: \"\\u9A8C\\u8BC1\\u767B\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 58\n          }, this), loginMethod === 'password' && /*#__PURE__*/_jsxDEV(\"section\", {\n            id: \"login-panel-content-wrapper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CountryListSelect, {\n        show: showCountryList,\n        handleShowCountryList: handleShowCountryList,\n        changeCountry: changeCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/LoginPanel.jsx"],"names":["useEffect","useRef","useState","Header","store","electron","getCountryListAction","ipcRenderer","captchaToken","gt","challenge","key","validate","seccode","send","once","event","data","dispatch","CountryListSelect","props","countryList","setCountryList","getState","display","setDisplay","show","closePanel","handleShowCountryList","setTimeout","selectCountry","changeCountry","map","countryItem","id","cname","country_id","CaptchaPanel","appendCaptchaPanel","captcha","appendTo","document","getElementById","onSuccess","result","getValidate","console","log","geetest_validate","geetest_seccode","setShowCaptchaPanel","showCaptchaPanel","window","initGeetest","offline","new_captcha","product","width","https","LoginPanel","loginMethod","smscode","password","unknown","title","telRef","captchaCodeRef","setLoginMethod","setShow","country","setCountry","showCountryList","setShowCountryList","closePenal","changeLoginMethod","displayCaptchaPanel","invoke","then","res","userLogin","e","preventDefault","target"],"mappings":"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","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport {Input} from 'antd';\nimport '../../styles/login.css';\nimport Header from \"../layout/header\";\nimport store from \"../../redux/store\";\nimport electron from \"electron\";\nimport {getCountryListAction} from \"../../redux/actionCreators\";\n\nconst ipcRenderer = electron.ipcRenderer || false;\nlet captchaToken = {\n    gt: \"\",\n    challenge: \"\",\n    key: \"\",\n    validate: \"\",\n    seccode: \"\"\n}\n\nif(ipcRenderer){\n    ipcRenderer.send(\"request_country_list\");\n    ipcRenderer.once(\"fetch_country_list\", (event, data) => {\n        store.dispatch(getCountryListAction(data));\n    });\n}\n\n/**\n * Country list panel.\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction CountryListSelect(props){\n    const [countryList, setCountryList] = useState(store.getState().countryList);\n    const [display, setDisplay] = useState(false);\n\n    useEffect(() => {\n        setCountryList(store.getState().countryList);\n    }, [store.getState().countryList])\n\n    useEffect(() => {\n        props.show && setDisplay(true);\n    }, [props.show]);\n\n    function closePanel(){\n        props.handleShowCountryList();\n        setTimeout(() => {\n            setDisplay(false);\n        }, 600);\n    }\n\n    function selectCountry(data){\n        props.changeCountry(data);\n        closePanel();\n    }\n\n    return (\n        <section\n            className={`login-panel-wrapper country-selector-wrapper country-selector-${props.show ? 'show' : 'hide'}`}\n            style={{display: (display? 'block': 'none')}}\n        >\n            <Header\n                left={\n                    <span className=\"iconfont icon-back login-close-btn\" onClick={() => closePanel()}/>\n                }\n                center={\n                    <span>选择国家地区</span>\n                }\n            />\n\n            <section className=\"country-selector-content\">\n                {\n                    countryList.map((countryItem) => (\n                        <div\n                            className=\"country-list-item\"\n                            key={countryItem.id}\n                            onClick={() => selectCountry({\n                                id: countryItem.id,\n                                cname: countryItem.cname,\n                                country_id: countryItem.country_id\n                            })}>\n                            {countryItem.cname}\n                        </div>\n                    ))\n                }\n            </section>\n        </section>\n    )\n}\n\n\nfunction CaptchaPanel(props){\n\n    function appendCaptchaPanel(captcha){\n        captcha.appendTo(document.getElementById(\"captcha-panel-wrapper\"));\n\n        captcha.onSuccess(() => {\n            const result = captcha.getValidate();\n            console.log([result.geetest_validate, result.geetest_seccode]);\n            captchaToken.validate = result.geetest_validate;\n            captchaToken.seccode = result.geetest_seccode;\n            props.setShowCaptchaPanel(false);\n        })\n    }\n\n    function showCaptchaPanel(){\n        window.initGeetest({\n            gt: captchaToken.gt,\n            challenge: captchaToken.challenge,\n            offline: false,\n            new_captcha: true,\n            product: \"popup\",\n            width: \"340px\",\n            https: true\n        }, appendCaptchaPanel)\n    }\n\n    useEffect(() => {\n        showCaptchaPanel();\n    })\n\n    return(\n        <div id=\"captcha-panel-container\">\n            <div id=\"captcha-panel-wrapper\"></div>\n        </div>\n    )\n}\n\n\n\n/**\n * Login main panel.\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function LoginPanel(props){\n\n    const data = {\n        loginMethod: {\n            smscode: \"smscode\",\n            password: \"password\",\n            unknown: \"unknown\"\n        },\n        title: {\n            smscode: \"手机号登录注册\",\n            password: \"密码登录\",\n            unknown: \"未知登录方式\"\n        }\n    }\n\n    let telRef = useRef(null);\n    let captchaCodeRef = useRef(null);\n\n    // method: smscode | password | qrcode\n    const [loginMethod, setLoginMethod] = useState(data.loginMethod.smscode);\n    const [show, setShow] = useState(true);\n    let title = data.title[loginMethod];\n    const [country, setCountry] = useState({\n        id: 1,\n        cname: \"中国大陆\",\n        country_id: 86\n    });\n    const [showCountryList, setShowCountryList] = useState(false);\n    const [showCaptchaPanel, setShowCaptchaPanel] = useState(false);\n\n    function closePenal(){\n        setShow(false);\n        setTimeout(() => {\n            props.display();\n        }, 600);\n    }\n\n    function changeLoginMethod(){\n        switch (loginMethod) {\n            case 'smscode':\n                setLoginMethod(data.loginMethod.password);\n                break;\n            case 'password':\n                setLoginMethod(data.loginMethod.smscode);\n                break;\n            default:\n                setLoginMethod(data.loginMethod.unknown);\n        }\n    }\n\n    function handleShowCountryList(){\n        setShowCountryList(!showCountryList);\n    }\n\n    function changeCountry(data){\n        setCountry(data);\n    }\n\n    function displayCaptchaPanel(){\n        if(showCaptchaPanel === true) return;\n        ipcRenderer.invoke('request_captcha_token')\n            .then((data) => {\n                captchaToken.gt = data.gt;\n                captchaToken.challenge = data.challenge;\n                captchaToken.key = data.key;\n                return true;\n            })\n            .then(res => {\n                res && setShowCaptchaPanel(true);\n            })\n    }\n\n    function userLogin(){\n        console.log(\"cid: \", country.id);\n        console.log(\"country\", country.cname);\n    }\n\n    return (\n        <section id=\"login-panel-container\"\n            onClick={(e) => {\n                e.preventDefault();\n                if(e.target.id === 'login-panel-container'){\n                    closePenal();\n                }\n            }}\n        >\n            <section id=\"login-panel-container-wrapper\" className={`login-panel-${show ? 'show' : 'hide'}`}>\n                <section className={`login-panel-wrapper`}>\n                    <Header\n                        left={\n                            <span className=\"iconfont icon-close login-close-btn\" onClick={() => closePenal()} />\n                        }\n                        center={\n                            <span>{title}</span>\n                        }\n                        right={\n                            <a href=\"#\" onClick={() => changeLoginMethod()}>{loginMethod === 'smscode' ? data.title.password : data.title.smscode}</a>\n                        }\n                    />\n\n                    <section className=\"login-panel-content\">\n                        {\n                            loginMethod === 'smscode' && <div className=\"login-panel-content-wrapper\">\n                                <div className=\"login-panel-input-filed\">\n                                    <div className=\"login-panel-input-item country-selector\" onClick={() => handleShowCountryList()}>\n                                        <span>{country.cname}</span>\n                                        <i className=\"iconfont icon-next\" />\n                                    </div>\n\n                                    <div className=\"login-panel-input-item phone-number\">\n                                        <span className=\"input-item-title\">+{country.country_id}</span>\n                                        <Input\n                                            ref={telRef}\n                                            placeholder=\"请输入手机号码\"\n                                            maxLength={16}\n                                            allowClear={true}\n                                            className=\"phone-number-input\"\n                                        />\n                                        <span className=\"getCaptcha\" onClick={() => displayCaptchaPanel()}>\n                                            获取验证码\n                                        </span>\n                                    </div>\n\n                                    <div className=\"login-panel-input-item\">\n                                        <span className=\"input-item-title\">验证码</span>\n                                        <Input\n                                            ref={captchaCodeRef}\n                                            placeholder=\"请输入验证码\"\n                                            maxLength={8}\n                                            allowClear={true}\n                                            className=\"captcha-input\"\n                                        />\n                                    </div>\n\n                                    {\n                                        showCaptchaPanel && <div className=\"login-panel-input-item captcha-item\">\n                                            {showCaptchaPanel && <CaptchaPanel setShowCaptchaPanel={setShowCaptchaPanel}/>}\n                                        </div>\n                                    }\n                                </div>\n\n                                <a\n                                    href=\"#\"\n                                    className=\"smscode-validate-login-btn\"\n                                    onClick={() => userLogin()}\n                                >\n                                    验证登录\n                                </a>\n                            </div>\n                        }\n\n                        {\n                            loginMethod === 'password' && <section id=\"login-panel-content-wrapper\"></section>\n                        }\n                    </section>\n                </section>\n\n                <CountryListSelect\n                    show={showCountryList}\n                    handleShowCountryList={handleShowCountryList}\n                    changeCountry={changeCountry}\n                />\n            </section>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}