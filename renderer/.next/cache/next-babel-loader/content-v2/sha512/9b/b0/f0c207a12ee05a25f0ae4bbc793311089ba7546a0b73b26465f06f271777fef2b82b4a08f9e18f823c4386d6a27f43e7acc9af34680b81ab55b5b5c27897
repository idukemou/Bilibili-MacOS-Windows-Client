{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport store from \"../../redux/store\";\nimport { platVideoStatusAction, playVideoInfoAction } from \"../../redux/actionCreators\";\nimport { convertDuration } from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props) {\n  _s();\n\n  var _useState = useState(null),\n      player = _useState[0],\n      setPlayer = _useState[1];\n\n  var _useState2 = useState(null),\n      mediaContainer = _useState2[0],\n      setMediaContainer = _useState2[1];\n\n  var _useState3 = useState(store.getState().videoInfo.url),\n      url = _useState3[0],\n      setUrl = _useState3[1];\n\n  var _useState4 = useState(false),\n      ready = _useState4[0],\n      setReady = _useState4[1];\n\n  var _useState5 = useState(false),\n      isMuted = _useState5[0],\n      setIsMuted = _useState5[1];\n\n  var _useState6 = useState(-1),\n      processTime = _useState6[0],\n      setProcessTime = _useState6[1];\n\n  var processor = null;\n  useEffect(function () {\n    var unsubscribe = store.subscribe(function () {\n      if (JSON.stringify(store.getState().videoInfo.url) !== '{}') {\n        setUrl(store.getState().videoInfo.url.durl[0].url);\n        unsubscribe();\n      }\n    });\n\n    if (flvjs.isSupported() && url.length > 10) {\n      setPlayer(flvjs.createPlayer({\n        type: 'flv',\n        isLive: false,\n        hasVideo: true,\n        hasAudio: true,\n        url: url\n      }, {\n        lazyLoad: false\n      }));\n      setMediaContainer(document.getElementById('media-container'));\n      setReady(true);\n    }\n  }, [url]);\n  useEffect(function () {\n    if (player !== null) {\n      initPlayer();\n    }\n  }, [ready]);\n\n  function initPlayer() {\n    if (player !== null && mediaContainer !== null) {\n      player.attachMediaElement(mediaContainer);\n      player.load();\n\n      mediaContainer.onloadeddata = function () {\n        play();\n      }; // mediaContainer.onplay = () => {\n      //     clearInterval(processor);\n      //     processor = setInterval(() => {\n      //         setProcessTime(convertDuration(getCurrentTime()));\n      //         console.log(\"buffer: \", mediaContainer.buffered.length);\n      //         console.log(\"end: \", mediaContainer.buffered.end(0));\n      //     }, 1000);\n      // }\n\n\n      mediaContainer.onended = function () {\n        clearInterval(processor);\n      };\n\n      mediaContainer.onstalled = function () {\n        console.log(\"stalled\");\n      };\n    }\n  }\n\n  function play() {\n    if (player !== null) {\n      player.play().then(function () {})[\"catch\"](function (e) {});\n    }\n  }\n\n  function pause() {\n    player !== null && player.pause();\n  }\n\n  function destroy() {\n    if (player !== null) {\n      pause();\n      player.unload();\n      player.detachMediaElement();\n      player.destroy();\n      setPlayer(null);\n    }\n  }\n\n  function getCurrentTime() {\n    if (player !== null && convertDuration(player.currentTime) < convertDuration(player.duration)) {\n      return player.currentTime;\n    }\n\n    return -1;\n  }\n\n  function setCurrentTime(time) {\n    if (player !== null) {\n      player.currentTime = time;\n    }\n  }\n\n  function appendSeek(time) {\n    player.currentTime = player.currentTime + time;\n  }\n\n  function pushSeek() {\n    appendSeek(0.1);\n  }\n\n  function muteSwitcher() {\n    isMuted ? setIsMuted(false) : setIsMuted(true);\n  }\n\n  function quit() {\n    destroy();\n    props.quit();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-player-container\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"media-container\",\n        controls: true,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return quit();\n      },\n      children: \"\\u9000\\u51FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-wrapper\",\n      onClick: function onClick() {\n        return console.log('touched');\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        className: \"progress-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\n_s(MediaPlayer, \"+JqXI+XrGx9n8XweN3scex8HhKs=\");\n\n_c = MediaPlayer;\nexport default function VideoDetail(props) {\n  _s2();\n\n  var _useState7 = useState(store.getState().playVideoStatus),\n      status = _useState7[0],\n      setStatus = _useState7[1];\n\n  useEffect(function () {\n    store.subscribe(function () {\n      setStatus(store.getState().playVideoStatus);\n    });\n  }, [store.getState().playVideoStatus]);\n\n  function exitVideo() {\n    store.dispatch(platVideoStatusAction(false));\n    store.dispatch(playVideoInfoAction({\n      url: {},\n      info: {}\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: '100',\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: '#fff',\n      display: status ? 'block' : 'none',\n      overflow: \"scroll\"\n    },\n    children: status && /*#__PURE__*/_jsxDEV(MediaPlayer, {\n      quit: exitVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(VideoDetail, \"1IV1QrlNWNfANAKMe6lxWYK5QPg=\");\n\n_c2 = VideoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MediaPlayer\");\n$RefreshReg$(_c2, \"VideoDetail\");","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx"],"names":["useEffect","useState","store","platVideoStatusAction","playVideoInfoAction","convertDuration","MediaPlayer","props","player","setPlayer","mediaContainer","setMediaContainer","getState","videoInfo","url","setUrl","ready","setReady","isMuted","setIsMuted","processTime","setProcessTime","processor","unsubscribe","subscribe","JSON","stringify","durl","flvjs","isSupported","length","createPlayer","type","isLive","hasVideo","hasAudio","lazyLoad","document","getElementById","initPlayer","attachMediaElement","load","onloadeddata","play","onended","clearInterval","onstalled","console","log","then","e","pause","destroy","unload","detachMediaElement","getCurrentTime","currentTime","duration","setCurrentTime","time","appendSeek","pushSeek","muteSwitcher","quit","VideoDetail","playVideoStatus","status","setStatus","exitVideo","dispatch","info","position","top","left","right","bottom","zIndex","width","height","backgroundColor","display","overflow"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport store from \"../../redux/store\";\nimport {platVideoStatusAction, playVideoInfoAction} from \"../../redux/actionCreators\";\nimport {convertDuration} from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props){\n    const [player, setPlayer] = useState(null);\n    const [mediaContainer, setMediaContainer] = useState(null);\n    const [url, setUrl] = useState(store.getState().videoInfo.url);\n    const [ready, setReady] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [processTime, setProcessTime] = useState(-1);\n    let processor = null;\n\n\n\n\n    useEffect(() => {\n        let unsubscribe = store.subscribe(() => {\n            if(JSON.stringify(store.getState().videoInfo.url) !== '{}'){\n                setUrl(store.getState().videoInfo.url.durl[0].url);\n                unsubscribe();\n            }\n        })\n\n        if(flvjs.isSupported() && url.length > 10){\n            setPlayer(flvjs.createPlayer({\n                type: 'flv',\n                isLive: false,\n                hasVideo: true,\n                hasAudio: true,\n                url: url\n            }, {\n                lazyLoad: false,\n            }));\n            setMediaContainer(document.getElementById('media-container'));\n            setReady(true);\n        }\n    }, [url]);\n\n    useEffect(() => {\n        if(player !== null){\n            initPlayer();\n        }\n    }, [ready]);\n\n    function initPlayer(){\n        if(player !== null && mediaContainer !== null){\n            player.attachMediaElement(mediaContainer);\n            player.load();\n\n            mediaContainer.onloadeddata = () => {\n                play();\n            }\n\n            // mediaContainer.onplay = () => {\n            //     clearInterval(processor);\n            //     processor = setInterval(() => {\n            //         setProcessTime(convertDuration(getCurrentTime()));\n            //         console.log(\"buffer: \", mediaContainer.buffered.length);\n            //         console.log(\"end: \", mediaContainer.buffered.end(0));\n            //     }, 1000);\n            // }\n\n            mediaContainer.onended = () => {\n                clearInterval(processor);\n            }\n\n            mediaContainer.onstalled = () => {\n                console.log(\"stalled\");\n            }\n\n\n        }\n    }\n\n    function play(){\n        if(player !== null){\n            player.play()\n                .then(() => {\n\n                })\n                .catch((e) => {});\n        }\n    }\n\n    function pause(){\n        player !== null && player.pause();\n    }\n\n    function destroy(){\n        if(player !== null){\n            pause();\n            player.unload();\n            player.detachMediaElement();\n            player.destroy();\n            setPlayer(null);\n        }\n    }\n\n    function getCurrentTime(){\n        if((player !== null) && (convertDuration(player.currentTime) < convertDuration(player.duration))){\n            return player.currentTime;\n        }\n        return -1;\n    }\n\n    function setCurrentTime(time){\n        if(player !== null){\n            player.currentTime = time;\n        }\n    }\n\n    function appendSeek(time){\n        player.currentTime = player.currentTime + time;\n    }\n\n    function pushSeek(){\n        appendSeek(0.1);\n    }\n\n    function muteSwitcher(){\n        isMuted ? setIsMuted(false) : setIsMuted(true);\n    }\n\n    function quit(){\n        destroy();\n        props.quit();\n    }\n\n\n\n\n\n    return(\n        <>\n            <div className=\"media-player-container\">\n                <video id='media-container' controls={true} width=\"100%\" />\n            </div>\n\n            {/*<button onClick={() => flvPlayer.play()}>play</button>*/}\n            {/*<button onClick={() => flvPlayer.pause()}>pause</button>*/}\n            {/*<button onClick={() => flvPlayer.destroy()}>destroy</button>*/}\n            {/*<button onClick={() => flvPlayer.setCurrentTime(10)}>加10秒</button>*/}\n            {/*<button onClick={() => flvPlayer.muteSwitch()}>静音</button>*/}\n            {/*<button onClick={() => {console.log(flvPlayer.getDuration())}}>获取播放长度</button>*/}\n            {/*<button onClick={() => flvPlayer.setPlaySpeed(2)}>2x速度</button>*/}\n            {/*<button onClick={() => flvPlayer.replayVideo()}>重新播放</button><br/><br/>*/}\n            <button onClick={() => quit()}>退出</button>\n\n            <div className=\"progress-bar-wrapper\" onClick={() => console.log('touched')}>\n                <input type=\"range\" min=\"0\" max=\"100\" className=\"progress-bar\"/>\n            </div>\n\n        </>\n    )\n}\n\n\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function VideoDetail(props){\n\n    const [status, setStatus] = useState(store.getState().playVideoStatus);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            setStatus(store.getState().playVideoStatus);\n        })\n    }, [store.getState().playVideoStatus]);\n\n\n    function exitVideo(){\n        store.dispatch(platVideoStatusAction(false));\n        store.dispatch(playVideoInfoAction({\n            url: {},\n            info: {}\n        }));\n    }\n\n    return(\n        <section style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: '100',\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: '#fff',\n            display: (status ? 'block': 'none'),\n            overflow: \"scroll\"\n        }}>\n            {\n                status && <MediaPlayer quit={exitVideo} />\n            }\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}