{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport store from \"../../redux/store\";\nexport default function ContentFrame(props) {\n  const {\n    0: availableSize,\n    1: setAvailableSize\n  } = useState(store.getState().availableSize);\n  useEffect(() => {\n    store.subscribe(() => setAvailableSize(store.getState().availableSize));\n  }, [store.getState().availableSize.width, store.getState().availableSize.height]);\n  return /*#__PURE__*/_jsx(\"section\", {\n    style: {\n      width: `${props.children.length * 100}%`,\n      height: `${availableSize.height}px`,\n      overflow: 'hidden',\n      position: 'absolute',\n      transition: 'left 0.3s',\n      left: `${props.activeIndex * -availableSize.width}px`\n    },\n    children: props.children\n  });\n}\nexport function Content(props) {\n  const ref = useRef(null);\n  const {\n    0: availableSize,\n    1: setAvailableSize\n  } = useState(store.getState().availableSize);\n  const {\n    0: scrollHeight,\n    1: setScrollHeight\n  } = useState(0);\n  const {\n    0: scrollTop,\n    1: setScrollTop\n  } = useState(0);\n  const {\n    0: clientHeight,\n    1: setClientHeight\n  } = useState(0);\n  const {\n    0: reachEnd,\n    1: setReachEnd\n  } = useState(false);\n  useEffect(() => {\n    store.subscribe(() => setAvailableSize(store.getState().availableSize));\n  }, [store.getState().availableSize.width, store.getState().availableSize.height]);\n  useEffect(() => {\n    setClientHeight(ref.current.clientHeight);\n  }, [store.getState().availableSize]);\n  useEffect(() => {\n    ref.current.addEventListener('scroll', () => {\n      setScrollTop(ref.current.scrollTop);\n      setScrollHeight(ref.current.scrollHeight);\n\n      if (ref.current.scrollHeight - availableSize.height === ref.current.scrollTop) {\n        setReachEnd(true);\n      } else {\n        setReachEnd(false);\n      }\n    }, false);\n  });\n  return /*#__PURE__*/_jsx(\"section\", {\n    style: {\n      width: availableSize.width + 'px',\n      height: availableSize.height + 'px',\n      float: \"left\",\n      overflow: 'hidden',\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignContent: 'flex-start'\n    },\n    children: /*#__PURE__*/_jsx(\"section\", {\n      ref: ref,\n      className: \"recommend-item-wrapper\",\n      style: {\n        width: availableSize.width + 'px',\n        height: availableSize.height + 'px'\n      },\n      children: React.Children.map(props.children, child => {\n        if (! /*#__PURE__*/React.isValidElement(child)) {\n          return null;\n        }\n\n        const childProps = _objectSpread(_objectSpread({}, child.props), {}, {\n          loading: reachEnd,\n          clientData: {\n            scrollTop,\n            clientHeight\n          }\n        });\n\n        return /*#__PURE__*/React.cloneElement(child, childProps);\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}