{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx\";\nimport { useEffect, useState, use } from \"react\";\nimport store from \"../../redux/store\";\nimport { platVideoStatusAction, playVideoInfoAction } from \"../../redux/actionCreators\";\nimport Player from \"../../utils/Player\";\nimport { convertDuration, convertTime } from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props) {\n  const {\n    0: player,\n    1: setPlayer\n  } = useState(null);\n  const {\n    0: mediaContainer,\n    1: setMediaContainer\n  } = useState(null);\n  const {\n    0: url,\n    1: setUrl\n  } = useState(store.getState().videoInfo.url);\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: isMuted,\n    1: setIsMuted\n  } = useState(false);\n  const {\n    0: processTime,\n    1: setProcessTime\n  } = useState(-1);\n  let processor = null;\n  useEffect(() => {\n    let unsubscribe = store.subscribe(() => {\n      if (JSON.stringify(store.getState().videoInfo.url) !== '{}') {\n        setUrl(store.getState().videoInfo.url.durl[0].url);\n        unsubscribe();\n      }\n    });\n\n    if (flvjs.isSupported() && url.length > 10) {\n      setPlayer(flvjs.createPlayer({\n        type: 'flv',\n        isLive: false,\n        hasVideo: true,\n        hasAudio: true,\n        url: url\n      }));\n      setMediaContainer(document.getElementById('media-container'));\n      setReady(true);\n    }\n  }, [url]);\n  useEffect(() => {\n    if (player !== null) {\n      initPlayer();\n    }\n  }, [ready]);\n\n  function initPlayer() {\n    if (player !== null && mediaContainer !== null) {\n      player.attachMediaElement(mediaContainer);\n      player.load();\n\n      mediaContainer.onloadeddata = () => {\n        play();\n      };\n\n      mediaContainer.onplay = () => {\n        clearInterval(processor);\n        processor = setInterval(() => {\n          setProcessTime(convertDuration(getCurrentTime()));\n          console.log(\"buffer: \", mediaContainer.buffered.length);\n          console.log(\"end: \", mediaContainer.buffered.end(0));\n        }, 1000);\n      };\n\n      mediaContainer.onended = () => {\n        clearInterval(processor);\n      };\n    }\n  }\n\n  function play() {\n    if (player !== null) {\n      player.play().then(() => {}).catch(e => {});\n    }\n  }\n\n  function pause() {\n    player !== null && player.pause();\n  }\n\n  function destroy() {\n    if (player !== null) {\n      pause();\n      player.unload();\n      player.detachMediaElement();\n      player.destroy();\n      setPlayer(null);\n    }\n  }\n\n  function getCurrentTime() {\n    if (player !== null && convertDuration(player.currentTime) < convertDuration(player.duration)) {\n      return player.currentTime;\n    }\n\n    return -1;\n  }\n\n  function setCurrentTime(time) {\n    if (player !== null) {\n      player.currentTime = time;\n    }\n  }\n\n  function appendSeek(time) {\n    player.currentTime = player.currentTime + time;\n  }\n\n  function pushSeek() {\n    appendSeek(0.1);\n  }\n\n  function muteSwitcher() {\n    isMuted ? setIsMuted(false) : setIsMuted(true);\n  }\n\n  function quit() {\n    destroy();\n    props.quit();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 640,\n      height: 480,\n      border: '1px solid #000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"media-container\",\n      width: \"640px\",\n      height: \"480px\",\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => quit(),\n      children: \"\\u9000\\u51FA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-wrapper\",\n      onClick: () => console.log('touched'),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        className: \"progress-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: processTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\nexport default function VideoDetail(props) {\n  const {\n    0: status,\n    1: setStatus\n  } = useState(store.getState().playVideoStatus);\n  useEffect(() => {\n    store.subscribe(() => {\n      setStatus(store.getState().playVideoStatus);\n    });\n  }, [store.getState().playVideoStatus]);\n\n  function exitVideo() {\n    store.dispatch(platVideoStatusAction(false));\n    store.dispatch(playVideoInfoAction({\n      url: {},\n      info: {}\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: '10000',\n      backgroundColor: 'lightpink',\n      display: status ? 'block' : 'none'\n    },\n    children: [status && /*#__PURE__*/_jsxDEV(MediaPlayer, {\n      quit: exitVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx"],"names":["useEffect","useState","use","store","platVideoStatusAction","playVideoInfoAction","Player","convertDuration","convertTime","MediaPlayer","props","player","setPlayer","mediaContainer","setMediaContainer","url","setUrl","getState","videoInfo","ready","setReady","isMuted","setIsMuted","processTime","setProcessTime","processor","unsubscribe","subscribe","JSON","stringify","durl","flvjs","isSupported","length","createPlayer","type","isLive","hasVideo","hasAudio","document","getElementById","initPlayer","attachMediaElement","load","onloadeddata","play","onplay","clearInterval","setInterval","getCurrentTime","console","log","buffered","end","onended","then","catch","e","pause","destroy","unload","detachMediaElement","currentTime","duration","setCurrentTime","time","appendSeek","pushSeek","muteSwitcher","quit","width","height","border","VideoDetail","status","setStatus","playVideoStatus","exitVideo","dispatch","info","position","top","left","right","bottom","zIndex","backgroundColor","display"],"mappings":"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","sourcesContent":["import {useEffect, useState, use} from \"react\";\nimport store from \"../../redux/store\";\nimport {platVideoStatusAction, playVideoInfoAction} from \"../../redux/actionCreators\";\nimport Player from \"../../utils/Player\";\nimport {convertDuration, convertTime} from \"../../utils/utils\";\nimport '../../styles/videoPlayer.css';\n\nfunction MediaPlayer(props){\n    const [player, setPlayer] = useState(null);\n    const [mediaContainer, setMediaContainer] = useState(null);\n    const [url, setUrl] = useState(store.getState().videoInfo.url);\n    const [ready, setReady] = useState(false);\n    const [isMuted, setIsMuted] = useState(false);\n    const [processTime, setProcessTime] = useState(-1);\n    let processor = null;\n\n\n\n\n    useEffect(() => {\n        let unsubscribe = store.subscribe(() => {\n            if(JSON.stringify(store.getState().videoInfo.url) !== '{}'){\n                setUrl(store.getState().videoInfo.url.durl[0].url);\n                unsubscribe();\n            }\n        })\n\n        if(flvjs.isSupported() && url.length > 10){\n            setPlayer(flvjs.createPlayer({\n                type: 'flv',\n                isLive: false,\n                hasVideo: true,\n                hasAudio: true,\n                url: url\n            }));\n            setMediaContainer(document.getElementById('media-container'));\n            setReady(true);\n        }\n    }, [url]);\n\n    useEffect(() => {\n        if(player !== null){\n            initPlayer();\n        }\n    }, [ready]);\n\n    function initPlayer(){\n        if(player !== null && mediaContainer !== null){\n            player.attachMediaElement(mediaContainer);\n            player.load();\n\n            mediaContainer.onloadeddata = () => {\n                play();\n            }\n\n            mediaContainer.onplay = () => {\n                clearInterval(processor);\n                processor = setInterval(() => {\n                    setProcessTime(convertDuration(getCurrentTime()));\n                    console.log(\"buffer: \", mediaContainer.buffered.length);\n                    console.log(\"end: \", mediaContainer.buffered.end(0));\n                }, 1000);\n            }\n\n            mediaContainer.onended = () => {\n                clearInterval(processor);\n            }\n\n\n        }\n    }\n\n    function play(){\n        if(player !== null){\n            player.play()\n                .then(() => {\n\n                })\n                .catch((e) => {});\n        }\n    }\n\n    function pause(){\n        player !== null && player.pause();\n    }\n\n    function destroy(){\n        if(player !== null){\n            pause();\n            player.unload();\n            player.detachMediaElement();\n            player.destroy();\n            setPlayer(null);\n        }\n    }\n\n    function getCurrentTime(){\n        if((player !== null) && (convertDuration(player.currentTime) < convertDuration(player.duration))){\n            return player.currentTime;\n        }\n        return -1;\n    }\n\n    function setCurrentTime(time){\n        if(player !== null){\n            player.currentTime = time;\n        }\n    }\n\n    function appendSeek(time){\n        player.currentTime = player.currentTime + time;\n    }\n\n    function pushSeek(){\n        appendSeek(0.1);\n    }\n\n    function muteSwitcher(){\n        isMuted ? setIsMuted(false) : setIsMuted(true);\n    }\n\n    function quit(){\n        destroy();\n        props.quit();\n    }\n\n\n\n\n\n    return(\n        <div style={{width:640, height:480, border: '1px solid #000'}}>\n            <video id='media-container' width='640px' height='480px' controls={true} />\n            {/*<button onClick={() => flvPlayer.play()}>play</button>*/}\n            {/*<button onClick={() => flvPlayer.pause()}>pause</button>*/}\n            {/*<button onClick={() => flvPlayer.destroy()}>destroy</button>*/}\n            {/*<button onClick={() => flvPlayer.setCurrentTime(10)}>加10秒</button>*/}\n            {/*<button onClick={() => flvPlayer.muteSwitch()}>静音</button>*/}\n            {/*<button onClick={() => {console.log(flvPlayer.getDuration())}}>获取播放长度</button>*/}\n            {/*<button onClick={() => flvPlayer.setPlaySpeed(2)}>2x速度</button>*/}\n            {/*<button onClick={() => flvPlayer.replayVideo()}>重新播放</button><br/><br/>*/}\n            <button onClick={() => quit()}>退出</button>\n\n            <div className=\"progress-bar-wrapper\" onClick={() => console.log('touched')}>\n                <input type=\"range\" min=\"0\" max=\"100\" className=\"progress-bar\"/>\n            </div>\n\n            <span>{processTime}</span>\n\n        </div>\n    )\n}\n\n\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function VideoDetail(props){\n\n    const [status, setStatus] = useState(store.getState().playVideoStatus);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            setStatus(store.getState().playVideoStatus);\n        })\n    }, [store.getState().playVideoStatus]);\n\n\n    function exitVideo(){\n        store.dispatch(platVideoStatusAction(false));\n        store.dispatch(playVideoInfoAction({\n            url: {},\n            info: {}\n        }));\n    }\n\n    return(\n        <section style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: '10000',\n            backgroundColor: 'lightpink',\n            display: (status ? 'block': 'none')\n        }}>\n            {\n                status && <MediaPlayer quit={exitVideo} />\n            }\n            <br/><br/><br/><br/>\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}