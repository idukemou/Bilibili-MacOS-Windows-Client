{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport store from \"../../redux/store\";\nimport { platVideoStatusAction, playVideoInfoAction } from \"../../redux/actionCreators\";\nimport Player from \"../../utils/Player\";\nimport { convertTime } from \"../../utils/utils\";\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\nfunction Video(props) {\n  _s();\n\n  console.log(\"新开的\");\n  var flvPlayer = null;\n\n  var _useState = useState(store.getState().videoInfo.url),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState(0),\n      currentTime = _useState2[0],\n      setCurrentTime = _useState2[1];\n\n  useEffect(function () {\n    store.subscribe(function () {\n      if (JSON.stringify(store.getState().videoInfo.url) !== '{}') {\n        var temp = store.getState().videoInfo.url.durl[0].url;\n        setUrl(temp);\n      }\n    });\n  }, [store.getState().videoInfo.url]);\n  useEffect(function () {\n    if (flvjs.isSupported()) {\n      player_load(url);\n    }\n  });\n  useEffect(function () {\n    if (!status) {\n      player_destroy();\n    }\n  }, [props.status]);\n  useEffect(function () {\n    if (flvPlayer !== null) {\n      setCurrentTime(flvPlayer.getCurrentTime());\n    }\n  }, [currentTime]);\n\n  function player_load(url) {\n    flvPlayer = new Player({\n      url: url\n    }, \"playerContainer\");\n  }\n\n  function player_start() {\n    flvPlayer.play();\n  }\n\n  function player_pause() {\n    flvPlayer.pause();\n  }\n\n  function player_destroy() {\n    if (flvPlayer !== null) {\n      flvPlayer.destroy();\n    }\n  }\n\n  function player_specificTime() {\n    if (flvPlayer !== null) {\n      flvPlayer.setCurrentTime(10);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 640,\n      height: 480,\n      border: '1px solid #000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"playerContainer\",\n      width: \"640px\",\n      height: \"480px\",\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return player_start();\n      },\n      children: \"play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return player_pause();\n      },\n      children: \"pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return player_destroy();\n      },\n      children: \"destroy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return player_specificTime();\n      },\n      children: \"\\u52A010\\u79D2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return flvPlayer.muteSwitch();\n      },\n      children: \"\\u9759\\u97F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        console.log(flvPlayer.getDuration());\n      },\n      children: \"\\u83B7\\u53D6\\u64AD\\u653E\\u957F\\u5EA6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return flvPlayer.setPlaySpeed(2);\n      },\n      children: \"2x\\u901F\\u5EA6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return flvPlayer.replayVideo();\n      },\n      children: \"\\u91CD\\u65B0\\u64AD\\u653E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 74\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\n\n\n_s(Video, \"HZr3ZsZd8OpKeF2jusnb6A8Z+W0=\");\n\n_c = Video;\nexport default function VideoDetail(props) {\n  _s2();\n\n  var _useState3 = useState(store.getState().playVideoStatus),\n      status = _useState3[0],\n      setStatus = _useState3[1];\n\n  useEffect(function () {\n    store.subscribe(function () {\n      setStatus(store.getState().playVideoStatus);\n    });\n  }, [store.getState().playVideoStatus]);\n\n  function exitVideo() {\n    store.dispatch(platVideoStatusAction(false));\n    store.dispatch(playVideoInfoAction({\n      url: {},\n      info: {}\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: '10000',\n      backgroundColor: 'lightpink',\n      display: status ? 'block' : 'none'\n    },\n    children: [status && /*#__PURE__*/_jsxDEV(Video, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return exitVideo();\n      },\n      children: \"cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(VideoDetail, \"1IV1QrlNWNfANAKMe6lxWYK5QPg=\");\n\n_c2 = VideoDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"VideoDetail\");","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/common/videoDetail.jsx"],"names":["useEffect","useRef","useState","store","platVideoStatusAction","playVideoInfoAction","Player","convertTime","Video","props","console","log","flvPlayer","getState","videoInfo","url","setUrl","currentTime","setCurrentTime","subscribe","JSON","stringify","temp","durl","flvjs","isSupported","player_load","status","player_destroy","getCurrentTime","player_start","play","player_pause","pause","destroy","player_specificTime","width","height","border","muteSwitch","getDuration","setPlaySpeed","replayVideo","VideoDetail","playVideoStatus","setStatus","exitVideo","dispatch","info","position","top","left","right","bottom","zIndex","backgroundColor","display"],"mappings":"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","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport store from \"../../redux/store\";\nimport {platVideoStatusAction, playVideoInfoAction} from \"../../redux/actionCreators\";\nimport Player from \"../../utils/Player\";\nimport {convertTime} from \"../../utils/utils\";\n\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction Video(props){\n\n    console.log(\"新开的\");\n\n    let flvPlayer = null;\n    const [url, setUrl] = useState(store.getState().videoInfo.url);\n    const [currentTime, setCurrentTime] = useState(0);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            if(JSON.stringify(store.getState().videoInfo.url) !== '{}'){\n                const temp = store.getState().videoInfo.url.durl[0].url;\n                setUrl(temp);\n            }\n        })\n    }, [store.getState().videoInfo.url]);\n\n    useEffect(() => {\n        if(flvjs.isSupported()){\n            player_load(url);\n        }\n    })\n\n    useEffect(() => {\n        if(!status){\n            player_destroy();\n        }\n    }, [props.status])\n\n    useEffect(() => {\n        if(flvPlayer !== null){\n            setCurrentTime(flvPlayer.getCurrentTime());\n        }\n    }, [currentTime])\n\n\n\n    function player_load(url){\n        flvPlayer = new Player({url: url}, \"playerContainer\");\n    }\n\n    function player_start(){\n        flvPlayer.play();\n    }\n\n    function player_pause(){\n        flvPlayer.pause();\n    }\n\n    function player_destroy(){\n        if(flvPlayer !== null){\n            flvPlayer.destroy();\n        }\n    }\n\n    function player_specificTime(){\n        if(flvPlayer !== null){\n            flvPlayer.setCurrentTime(10);\n        }\n    }\n\n    return(\n        <div style={{width:640, height:480, border: '1px solid #000'}}>\n            <video id='playerContainer' width='640px' height='480px' controls={true} />\n            <button onClick={() => player_start()}>play</button>\n            <button onClick={() => player_pause()}>pause</button>\n            <button onClick={() => player_destroy()}>destroy</button>\n            <button onClick={() => player_specificTime()}>加10秒</button>\n            <button onClick={() => flvPlayer.muteSwitch()}>静音</button>\n            <button onClick={() => {console.log(flvPlayer.getDuration())}}>获取播放长度</button>\n            <button onClick={() => flvPlayer.setPlaySpeed(2)}>2x速度</button>\n            <button onClick={() => flvPlayer.replayVideo()}>重新播放</button><br/>\n        </div>\n    )\n}\n\n\n/**\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function VideoDetail(props){\n\n    const [status, setStatus] = useState(store.getState().playVideoStatus);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            setStatus(store.getState().playVideoStatus);\n        })\n    }, [store.getState().playVideoStatus]);\n\n\n    function exitVideo(){\n        store.dispatch(platVideoStatusAction(false));\n        store.dispatch(playVideoInfoAction({\n            url: {},\n            info: {}\n        }));\n    }\n\n    return(\n        <section style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: '10000',\n            backgroundColor: 'lightpink',\n            display: (status ? 'block': 'none')\n        }}>\n            {\n                status && <Video status={status} />\n            }\n            <br/><br/><br/><br/>\n            <button onClick={() => exitVideo()}>cancel</button>\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}