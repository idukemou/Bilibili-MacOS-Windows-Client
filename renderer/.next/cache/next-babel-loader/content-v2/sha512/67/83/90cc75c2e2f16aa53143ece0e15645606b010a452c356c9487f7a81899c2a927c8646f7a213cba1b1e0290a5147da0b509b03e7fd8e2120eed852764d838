{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/homePage/rcmd.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport store from \"../../redux/store\";\nimport electron from 'electron';\nimport { getRecommendListAction } from \"../../redux/actionCreators\";\nimport { convertDuration, convertViews } from \"../../utils/utils\";\nconst ipcRenderer = electron.ipcRenderer || false;\n\nif (ipcRenderer) {\n  ipcRenderer.send('request_recommend_list');\n  ipcRenderer.on('fetch_recommend_list', async (event, data) => {\n    store.dispatch(await getRecommendListAction(data));\n  });\n}\n/**\n * Recommend UI Component.\n * @param props the props from its parent component\n * @returns {JSX.Element} the UI parts used for rendering\n * @constructor\n */\n\n\nfunction RecommendUI(props) {\n  const box = useRef(null);\n  const {\n    0: offsetTop,\n    1: setOffsetTop\n  } = useState(0);\n  useEffect(() => {\n    setOffsetTop(box.current.offsetTop);\n  }, [offsetTop]);\n  const data = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rcmd-item\",\n    ref: box\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\nexport default function Recommend(props) {\n  const {\n    0: recommendList,\n    1: setRecommendList\n  } = useState(store.getState().recommendList);\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(0);\n  useEffect(() => {\n    store.subscribe(() => {\n      setRecommendList(store.getState().recommendList);\n    });\n  }, [store.getState().recommendList]);\n  useEffect(() => {\n    if (props.loading && counter <= 4) {\n      loadMore();\n      setCounter(counter + 1);\n    }\n  }, [props.loading]);\n\n  function loadMore() {\n    if (ipcRenderer) {\n      ipcRenderer.invoke('request_recommend_list_append').then(data => {\n        const temp = recommendList.concat(data.item);\n        setRecommendList(temp);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: recommendList.map((list, index) => /*#__PURE__*/_jsxDEV(RecommendUI, _objectSpread({\n      data: list\n    }, props), index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/components/homePage/rcmd.jsx"],"names":["React","useEffect","useRef","useState","store","electron","getRecommendListAction","convertDuration","convertViews","ipcRenderer","send","on","event","data","dispatch","RecommendUI","props","box","offsetTop","setOffsetTop","current","Recommend","recommendList","setRecommendList","getState","counter","setCounter","subscribe","loading","loadMore","invoke","then","temp","concat","item","map","list","index"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,sBAAT,QAAuC,4BAAvC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AAEA,MAAMC,WAAW,GAAGJ,QAAQ,CAACI,WAAT,IAAwB,KAA5C;;AAEA,IAAGA,WAAH,EAAe;AACXA,EAAAA,WAAW,CAACC,IAAZ,CAAiB,wBAAjB;AACAD,EAAAA,WAAW,CAACE,EAAZ,CAAe,sBAAf,EAAuC,OAAOC,KAAP,EAAcC,IAAd,KAAuB;AAC1DT,IAAAA,KAAK,CAACU,QAAN,CAAe,MAAMR,sBAAsB,CAACO,IAAD,CAA3C;AACH,GAFD;AAGH;AAGD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,WAAT,CAAqBC,KAArB,EAA2B;AAEvB,QAAMC,GAAG,GAAGf,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM;AAAA,OAACgB,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,YAAY,CAACF,GAAG,CAACG,OAAJ,CAAYF,SAAb,CAAZ;AACH,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,QAAML,IAAI,GAAGG,KAAK,CAACH,IAAnB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAGD,eAAe,SAASI,SAAT,CAAmBL,KAAnB,EAAyB;AAEpC,QAAM;AAAA,OAACM,aAAD;AAAA,OAAgBC;AAAhB,MAAoCpB,QAAQ,CAACC,KAAK,CAACoB,QAAN,GAAiBF,aAAlB,CAAlD;AACA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwBvB,QAAQ,CAAC,CAAD,CAAtC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AAClBJ,MAAAA,gBAAgB,CAACnB,KAAK,CAACoB,QAAN,GAAiBF,aAAlB,CAAhB;AACH,KAFD;AAGH,GAJQ,EAIN,CAAClB,KAAK,CAACoB,QAAN,GAAiBF,aAAlB,CAJM,CAAT;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,KAAK,CAACY,OAAN,IAAiBH,OAAO,IAAI,CAA/B,EAAiC;AAC7BI,MAAAA,QAAQ;AACRH,MAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACH;AACJ,GALQ,EAKN,CAACT,KAAK,CAACY,OAAP,CALM,CAAT;;AAOA,WAASC,QAAT,GAAmB;AACf,QAAGpB,WAAH,EAAe;AACXA,MAAAA,WAAW,CAACqB,MAAZ,CAAmB,+BAAnB,EACKC,IADL,CACUlB,IAAI,IAAI;AACV,cAAMmB,IAAI,GAAGV,aAAa,CAACW,MAAd,CAAqBpB,IAAI,CAACqB,IAA1B,CAAb;AACAX,QAAAA,gBAAgB,CAACS,IAAD,CAAhB;AACH,OAJL;AAKH;AACJ;;AAED,sBACI;AAAA,cAEQV,aAAa,CAACa,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,WAAD;AAAyB,MAAA,IAAI,EAAED;AAA/B,OAAyCpB,KAAzC,GAAkBqB,KAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR,mBADJ;AASH","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport store from \"../../redux/store\";\nimport electron from 'electron';\nimport { getRecommendListAction } from \"../../redux/actionCreators\";\nimport { convertDuration, convertViews } from \"../../utils/utils\";\n\nconst ipcRenderer = electron.ipcRenderer || false;\n\nif(ipcRenderer){\n    ipcRenderer.send('request_recommend_list');\n    ipcRenderer.on('fetch_recommend_list', async (event, data) => {\n        store.dispatch(await getRecommendListAction(data))\n    });\n}\n\n\n/**\n * Recommend UI Component.\n * @param props the props from its parent component\n * @returns {JSX.Element} the UI parts used for rendering\n * @constructor\n */\nfunction RecommendUI(props){\n\n    const box = useRef(null);\n    const [offsetTop, setOffsetTop] = useState(0);\n\n    useEffect(() => {\n        setOffsetTop(box.current.offsetTop);\n    }, [offsetTop]);\n\n    const data = props.data;\n\n    return(\n        <div className='rcmd-item' ref={box}>\n            \n        </div>\n    )\n}\n\n\nexport default function Recommend(props){\n\n    const [recommendList, setRecommendList] = useState(store.getState().recommendList);\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n        store.subscribe(() => {\n            setRecommendList(store.getState().recommendList);\n        });\n    }, [store.getState().recommendList]);\n\n    useEffect(() => {\n        if(props.loading && counter <= 4){\n            loadMore();\n            setCounter(counter+1);\n        }\n    }, [props.loading]);\n\n    function loadMore(){\n        if(ipcRenderer){\n            ipcRenderer.invoke('request_recommend_list_append')\n                .then(data => {\n                    const temp = recommendList.concat(data.item);\n                    setRecommendList(temp);\n                });\n        }\n    }\n\n    return(\n        <>\n            {\n                recommendList.map((list, index) => (\n                    <RecommendUI key={index} data={list} {...props} />\n                ))\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}