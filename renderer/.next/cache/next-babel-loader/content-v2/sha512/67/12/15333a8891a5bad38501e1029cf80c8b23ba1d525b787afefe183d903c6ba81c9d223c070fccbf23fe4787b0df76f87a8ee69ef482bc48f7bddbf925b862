{"ast":null,"code":"import { GET_COUNTRY_LIST, GET_CATEGORY_LIST, AVAILABLE_CLIENT_HEIGHT } from './actionTypes';\nconst defaultState = {\n  availableClientHeight: 0,\n  countryList: {},\n  categoryList: {}\n};\nexport default function reducerHandler(state = defaultState, action) {\n  let newState = JSON.parse(JSON.stringify(state));\n\n  if (action.type === AVAILABLE_CLIENT_HEIGHT) {\n    newState.availableClientHeight = action.height;\n    return newState;\n  } else if (action.type === GET_COUNTRY_LIST) {\n    newState.countryList = action.countryList;\n    return newState;\n  } else if (action.type === GET_CATEGORY_LIST) {\n    newState.categoryList = action.categoryList;\n    return newState;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/yuxuan/Desktop/Bilibili-MacOS-Windows-Client/renderer/redux/reducer.js"],"names":["GET_COUNTRY_LIST","GET_CATEGORY_LIST","AVAILABLE_CLIENT_HEIGHT","defaultState","availableClientHeight","countryList","categoryList","reducerHandler","state","action","newState","JSON","parse","stringify","type","height"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,iBAFJ,EAEuBC,uBAFvB,QAGO,eAHP;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,qBAAqB,EAAE,CADN;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,YAAY,EAAE;AAHG,CAArB;AAMA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGL,YAAhC,EAA8CM,MAA9C,EAAsD;AAEjE,MAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,KAAf,CAAX,CAAf;;AAEA,MAAGC,MAAM,CAACK,IAAP,KAAgBZ,uBAAnB,EAA2C;AACvCQ,IAAAA,QAAQ,CAACN,qBAAT,GAAiCK,MAAM,CAACM,MAAxC;AACA,WAAOL,QAAP;AACH,GAHD,MAIK,IAAGD,MAAM,CAACK,IAAP,KAAgBd,gBAAnB,EAAoC;AACrCU,IAAAA,QAAQ,CAACL,WAAT,GAAuBI,MAAM,CAACJ,WAA9B;AACA,WAAOK,QAAP;AACH,GAHI,MAIA,IAAGD,MAAM,CAACK,IAAP,KAAgBb,iBAAnB,EAAqC;AACtCS,IAAAA,QAAQ,CAACJ,YAAT,GAAwBG,MAAM,CAACH,YAA/B;AACA,WAAOI,QAAP;AACH;;AAED,SAAOF,KAAP;AACH","sourcesContent":["import {\n    GET_COUNTRY_LIST,\n    GET_CATEGORY_LIST, AVAILABLE_CLIENT_HEIGHT\n} from './actionTypes';\n\nconst defaultState = {\n    availableClientHeight: 0,\n    countryList: {},\n    categoryList: {}\n};\n\nexport default function reducerHandler(state = defaultState, action) {\n\n    let newState = JSON.parse(JSON.stringify(state));\n\n    if(action.type === AVAILABLE_CLIENT_HEIGHT){\n        newState.availableClientHeight = action.height;\n        return newState;\n    }\n    else if(action.type === GET_COUNTRY_LIST){\n        newState.countryList = action.countryList;\n        return newState;\n    }\n    else if(action.type === GET_CATEGORY_LIST){\n        newState.categoryList = action.categoryList;\n        return newState;\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}